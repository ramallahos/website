[{"categories":["Markdown"],"content":"This article shows the basic Markdown syntax and format.","date":"97-916-16006","objectID":"/tutorial/","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/"},{"categories":["Markdown"],"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files. Note This article is a shameful copy of the great Grav original page. If you want to know about the extended Markdown syntax of LoveIt theme, please read extended Markdown syntax page. Let’s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages. Markdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it. Some of the key benefits are: Markdown is simple to learn, with minimal extra characters, so it’s also quicker to write content. Less chance of errors when writing in Markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use! John Gruber, the author of Markdown, puts it like this: The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. – John Gruber Without further delay, let us go over the main elements of Markdown and what the resulting HTML looks like! Tip  Bookmark this page for easy future reference! ","date":"97-916-16006","objectID":"/tutorial/:0:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#"},{"categories":["Markdown"],"content":" 1 1 HeadingsHeadings from h2 through h6 are constructed with a # for each level: ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading The HTML looks like this: \u003ch2\u003eh2 Heading\u003c/h2\u003e \u003ch3\u003eh3 Heading\u003c/h3\u003e \u003ch4\u003eh4 Heading\u003c/h4\u003e \u003ch5\u003eh5 Heading\u003c/h5\u003e \u003ch6\u003eh6 Heading\u003c/h6\u003e Heading IDs To add a custom heading ID, enclose the custom ID in curly braces on the same line as the heading: ### A Great Heading {#custom-id} The HTML looks like this: \u003ch3 id=\"custom-id\"\u003eA Great Heading\u003c/h3\u003e ","date":"97-916-16006","objectID":"/tutorial/:1:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#1-headings"},{"categories":["Markdown"],"content":" 2 2 CommentsComments should be HTML compatible. \u003c!-- This is a comment --\u003e Comment below should NOT be seen: ","date":"97-916-16006","objectID":"/tutorial/:2:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#2-comments"},{"categories":["Markdown"],"content":" 3 3 Horizontal RulesThe HTML \u003chr\u003e element is for creating a “thematic break” between paragraph-level elements. In Markdown, you can create a \u003chr\u003e with any of the following: ___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:3:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#3-horizontal-rules"},{"categories":["Markdown"],"content":" 4 4 Body CopyBody copy written as normal, plain text will be wrapped with \u003cp\u003e\u003c/p\u003e tags in the rendered HTML. So this body copy: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. The HTML looks like this: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e A line break can be done with one blank line. ","date":"97-916-16006","objectID":"/tutorial/:4:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#4-body-copy"},{"categories":["Markdown"],"content":" 5 5 Inline HTMLIf you need a certain HTML tag (with a class) you can simply use HTML: Paragraph in Markdown. \u003cdiv class=\"class\"\u003e This is \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Paragraph in Markdown. ","date":"97-916-16006","objectID":"/tutorial/:5:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#5-inline-html"},{"categories":["Markdown"],"content":" 6 6 Emphasis","date":"97-916-16006","objectID":"/tutorial/:6:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#6-emphasis"},{"categories":["Markdown"],"content":" 6.1 BoldFor emphasizing a snippet of text with a heavier font-weight. The following snippet of text is rendered as bold text. **rendered as bold text** __rendered as bold text__ The HTML looks like this: \u003cstrong\u003erendered as bold text\u003c/strong\u003e ","date":"97-916-16006","objectID":"/tutorial/:6:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#bold"},{"categories":["Markdown"],"content":" 6.2 ItalicsFor emphasizing a snippet of text with italics. The following snippet of text is rendered as italicized text. *rendered as italicized text* _rendered as italicized text_ The HTML looks like this: \u003cem\u003erendered as italicized text\u003c/em\u003e ","date":"97-916-16006","objectID":"/tutorial/:6:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#italics"},{"categories":["Markdown"],"content":" 6.3 StrikethroughIn GFMGitHub flavored Markdown you can do strikethroughs. ~~Strike through this text.~~ The rendered output looks like this: Strike through this text. The HTML looks like this: \u003cdel\u003eStrike through this text.\u003c/del\u003e ","date":"97-916-16006","objectID":"/tutorial/:6:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#strikethrough"},{"categories":["Markdown"],"content":" 6.4 CombinationBold, italics, and strikethrough can be used in combination. ***bold and italics*** ~~**strikethrough and bold**~~ ~~*strikethrough and italics*~~ ~~***bold, italics and strikethrough***~~ The rendered output looks like this: bold and italics strikethrough and bold strikethrough and italics bold, italics and strikethrough The HTML looks like this: \u003cem\u003e\u003cstrong\u003ebold and italics\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003estrikethrough and bold\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003estrikethrough and italics\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003ebold, italics and strikethrough\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"97-916-16006","objectID":"/tutorial/:6:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#combination"},{"categories":["Markdown"],"content":" 7 7 BlockquotesFor quoting blocks of content from another source within your document. Add \u003e before any text you want to quote: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. The rendered output looks like this: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. The HTML looks like this: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e Blockquotes can also be nested: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. The rendered output looks like this: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"97-916-16006","objectID":"/tutorial/:7:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#7-blockquotes"},{"categories":["Markdown"],"content":" 8 8 Lists","date":"97-916-16006","objectID":"/tutorial/:8:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#8-lists"},{"categories":["Markdown"],"content":" 8.1 UnorderedA list of items in which the order of the items does not explicitly matter. You may use any of the following symbols to denote bullets for each list item: * valid bullet - valid bullet + valid bullet For example: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"97-916-16006","objectID":"/tutorial/:8:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#unordered"},{"categories":["Markdown"],"content":" 8.2 OrderedA list of items in which the order of items does explicitly matter. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e Tip If you just use 1. for each number, Markdown will automatically number each item. For example: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"97-916-16006","objectID":"/tutorial/:8:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#ordered"},{"categories":["Markdown"],"content":" 8.3 Task ListsTask lists allow you to create a list of items with checkboxes. To create a task list, add dashes (-) and brackets with a space ([ ]) before task list items. To select a checkbox, add an x in between the brackets ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media The rendered output looks like this: Write the press release Update the website Contact the media ","date":"97-916-16006","objectID":"/tutorial/:8:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#task-lists"},{"categories":["Markdown"],"content":" 9 9 Code","date":"97-916-16006","objectID":"/tutorial/:9:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#9-code"},{"categories":["Markdown"],"content":" 9.1 Inline CodeWrap inline snippets of code with `. In this example, `\u003csection\u003e\u003c/section\u003e` should be wrapped as **code**. The rendered output looks like this: In this example, \u003csection\u003e\u003c/section\u003e should be wrapped as code. The HTML looks like this: \u003cp\u003e In this example, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e should be wrapped with \u003cstrong\u003ecode\u003c/strong\u003e. \u003c/p\u003e ","date":"97-916-16006","objectID":"/tutorial/:9:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#inline-code"},{"categories":["Markdown"],"content":" 9.2 Indented CodeOr indent several lines of code by at least four spaces, as in: // Some comments line 1 of code line 2 of code line 3 of code The rendered output looks like this: // Some comments line 1 of code line 2 of code line 3 of code The HTML looks like this: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"97-916-16006","objectID":"/tutorial/:9:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#indented-code"},{"categories":["Markdown"],"content":" 9.3 Block Fenced CodeUse “fences” ``` to block in multiple lines of code with a language attribute. ```markdown Sample text here... ``` The HTML looks like this: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"97-916-16006","objectID":"/tutorial/:9:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#block-fenced-code"},{"categories":["Markdown"],"content":" 9.4 Syntax HighlightingGFMGitHub Flavored Markdown also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code “fence”, ```js, and syntax highlighting will automatically be applied in the rendered HTML. For example, to apply syntax highlighting to JavaScript code: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` The rendered output looks like this: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; Note Syntax highlighting page in Hugo Docs introduces more about syntax highlighting, including highlight shortcode. ","date":"97-916-16006","objectID":"/tutorial/:9:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#syntax-highlighting"},{"categories":["Markdown"],"content":" 10 10 TablesTables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | The rendered output looks like this: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. The HTML looks like this: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e Right or center aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column. Adding colons on both sides of the dashes below any heading will center align text for that column. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | The rendered output looks like this: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"97-916-16006","objectID":"/tutorial/:10:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#10-tables"},{"categories":["Markdown"],"content":" 11 11 Links","date":"97-916-16006","objectID":"/tutorial/:11:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#links"},{"categories":["Markdown"],"content":" 11.1 Basic Link \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) The rendered output looks like this (hover over the link, there is no tooltip): https://assemble.io contact@revolunet.com Assemble The HTML looks like this: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"97-916-16006","objectID":"/tutorial/:11:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#basic-link"},{"categories":["Markdown"],"content":" 11.2 Add a Title [Upstage](https://github.com/upstage/ \"Visit Upstage!\") The rendered output looks like this (hover over the link, there should be a tooltip): Upstage The HTML looks like this: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"97-916-16006","objectID":"/tutorial/:11:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#add-a-title"},{"categories":["Markdown"],"content":" 11.3 Named AnchorsNamed anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) will jump to these sections: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. Note The specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works. ","date":"97-916-16006","objectID":"/tutorial/:11:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#named-anchors"},{"categories":["Markdown"],"content":" 12 12 FootnotesFootnotes allow you to add notes and references without cluttering the body of the document. When you create a footnote, a superscript number with a link appears where you added the footnote reference. Readers can click the link to jump to the content of the footnote at the bottom of the page. To create a footnote reference, add a caret and an identifier inside brackets ([^1]). Identifiers can be numbers or words, but they can’t contain spaces or tabs. Identifiers only correlate the footnote reference with the footnote itself — in the output, footnotes are numbered sequentially. Add the footnote using another caret and number inside brackets with a colon and text ([^1]: My footnote.). You don’t have to put footnotes at the end of the document. You can put them anywhere except inside other elements like lists, block quotes, and tables. This is a digital footnote[^1]. This is a footnote with \"label\"[^label] [^1]: This is a digital footnote [^label]: This is a footnote with \"label\" This is a digital footnote1. This is a footnote with “label”2 ","date":"97-916-16006","objectID":"/tutorial/:12:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#12-footnotes"},{"categories":["Markdown"],"content":" 13 13 ImagesImages have a similar syntax to links but include a preceding exclamation point. ![Minion](https://octodex.github.com/images/minion.png) or: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The Stormtroopocat Like links, images also have a footnote style syntax: ![Alt text][id] The Dojocat With a reference later in the document defining the URL location: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" Tip LoveIt theme has special shortcode for image, which provides more features. Emoji can be enabled in a Hugo project in a number of ways. The emojify function can be called directly in templates or Inline Shortcodes. To enable emoji globally, set enableEmoji to true in your site configuration and then you can type emoji shorthand codes directly in content files. These begin and end with a colon and include the code of an emoji: Gone camping! :tent: Be back soon. That is so funny! :joy: The rendered output looks like this: Gone camping! ⛺ Be back soon. That is so funny! 😂 The following cheat sheet is a useful reference for emoji shorthand codes. ","date":"97-916-16006","objectID":"/tutorial/:13:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#13-images"},{"categories":["Markdown"],"content":" 14 Smileys \u0026 Emotion","date":"97-916-16006","objectID":"/tutorial/:14:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#smileys--emotion"},{"categories":["Markdown"],"content":" 14.1 Face Smiling icon code icon code 😀 grinning 😃 smiley 😄 smile 😁 grin 😆 laughing satisfied 😅 sweat_smile 🤣 rofl 😂 joy 🙂 slightly_smiling_face 🙃 upside_down_face 😉 wink 😊 blush 😇 innocent ","date":"97-916-16006","objectID":"/tutorial/:14:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-smiling"},{"categories":["Markdown"],"content":" 14.2 Face Affection icon code icon code 😍 heart_eyes 😘 kissing_heart 😗 kissing ☺️ relaxed 😚 kissing_closed_eyes 😙 kissing_smiling_eyes ","date":"97-916-16006","objectID":"/tutorial/:14:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-affection"},{"categories":["Markdown"],"content":" 14.3 Face Tongue icon code icon code 😋 yum 😛 stuck_out_tongue 😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes 🤑 money_mouth_face ","date":"97-916-16006","objectID":"/tutorial/:14:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-tongue"},{"categories":["Markdown"],"content":" 14.4 Face Hand icon code icon code 🤗 hugs 🤔 thinking ","date":"97-916-16006","objectID":"/tutorial/:14:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-hand"},{"categories":["Markdown"],"content":" 14.5 Face Neutral Skeptical icon code icon code 🤐 zipper_mouth_face 😐 neutral_face 😑 expressionless 😶 no_mouth 😏 smirk 😒 unamused 🙄 roll_eyes 😬 grimacing 🤥 lying_face ","date":"97-916-16006","objectID":"/tutorial/:14:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-neutral-skeptical"},{"categories":["Markdown"],"content":" 14.6 Face Sleepy icon code icon code 😌 relieved 😔 pensive 😪 sleepy 🤤 drooling_face 😴 sleeping ","date":"97-916-16006","objectID":"/tutorial/:14:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-sleepy"},{"categories":["Markdown"],"content":" 14.7 Face Unwell icon code icon code 😷 mask 🤒 face_with_thermometer 🤕 face_with_head_bandage 🤢 nauseated_face 🤧 sneezing_face 😵 dizzy_face ","date":"97-916-16006","objectID":"/tutorial/:14:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-unwell"},{"categories":["Markdown"],"content":" 14.8 Face Hat icon code icon code 🤠 cowboy_hat_face ","date":"97-916-16006","objectID":"/tutorial/:14:8","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-hat"},{"categories":["Markdown"],"content":" 14.9 Face Glasses icon code icon code 😎 sunglasses 🤓 nerd_face ","date":"97-916-16006","objectID":"/tutorial/:14:9","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-glasses"},{"categories":["Markdown"],"content":" 14.10 Face Concerned icon code icon code 😕 confused 😟 worried 🙁 slightly_frowning_face ☹ frowning_face 😮 open_mouth 😯 hushed 😲 astonished 😳 flushed 😦 frowning 😧 anguished 😨 fearful 😰 cold_sweat 😥 disappointed_relieved 😢 cry 😭 sob 😱 scream 😖 confounded 😣 persevere 😞 disappointed 😓 sweat 😩 weary 😫 tired_face ","date":"97-916-16006","objectID":"/tutorial/:14:10","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-concerned"},{"categories":["Markdown"],"content":" 14.11 Face Negative icon code icon code 😤 triumph 😡 pout rage 😠 angry 😈 smiling_imp 👿 imp 💀 skull ☠️ skull_and_crossbones ","date":"97-916-16006","objectID":"/tutorial/:14:11","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-negative"},{"categories":["Markdown"],"content":" 14.12 Face Costume icon code icon code 💩 hankey poop shit 🤡 clown_face 👹 japanese_ogre 👺 japanese_goblin 👻 ghost 👽 alien 👾 space_invader 🤖 robot ","date":"97-916-16006","objectID":"/tutorial/:14:12","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#face-costume"},{"categories":["Markdown"],"content":" 14.13 Cat Face icon code icon code 😺 smiley_cat 😸 smile_cat 😹 joy_cat 😻 heart_eyes_cat 😼 smirk_cat 😽 kissing_cat 🙀 scream_cat 😿 crying_cat_face 😾 pouting_cat ","date":"97-916-16006","objectID":"/tutorial/:14:13","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#cat-face"},{"categories":["Markdown"],"content":" 14.14 Monkey Face icon code icon code 🙈 see_no_evil 🙉 hear_no_evil 🙊 speak_no_evil ","date":"97-916-16006","objectID":"/tutorial/:14:14","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#monkey-face"},{"categories":["Markdown"],"content":" 14.15 Emotion icon code icon code 💋 kiss 💌 love_letter 💘 cupid 💝 gift_heart 💖 sparkling_heart 💗 heartpulse 💓 heartbeat 💞 revolving_hearts 💕 two_hearts 💟 heart_decoration ❣️ heavy_heart_exclamation 💔 broken_heart ❤️ heart 💛 yellow_heart 💚 green_heart 💙 blue_heart 💜 purple_heart 🖤 black_heart 💯 100 💢 anger 💥 boom collision 💫 dizzy 💦 sweat_drops 💨 dash 🕳️ hole 💣 bomb 💬 speech_balloon 👁️‍🗨️ eye_speech_bubble 🗯️ right_anger_bubble 💭 thought_balloon 💤 zzz ","date":"97-916-16006","objectID":"/tutorial/:14:15","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#emotion"},{"categories":["Markdown"],"content":" 15 People \u0026 Body","date":"97-916-16006","objectID":"/tutorial/:15:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#people--body"},{"categories":["Markdown"],"content":" 15.1 Hand Fingers Open icon code icon code 👋 wave 🤚 raised_back_of_hand 🖐️ raised_hand_with_fingers_splayed ✋ hand raised_hand 🖖 vulcan_salute ","date":"97-916-16006","objectID":"/tutorial/:15:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#hand-fingers-open"},{"categories":["Markdown"],"content":" 15.2 Hand Fingers Partial icon code icon code 👌 ok_hand ✌️ v 🤞 crossed_fingers 🤘 metal 🤙 call_me_hand ","date":"97-916-16006","objectID":"/tutorial/:15:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#hand-fingers-partial"},{"categories":["Markdown"],"content":" 15.3 Hand Single Finger icon code icon code 👈 point_left 👉 point_right 👆 point_up_2 🖕 fu middle_finger 👇 point_down ☝️ point_up ","date":"97-916-16006","objectID":"/tutorial/:15:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#hand-single-finger"},{"categories":["Markdown"],"content":" 15.4 Hand Fingers Closed icon code icon code 👍 +1 thumbsup 👎 -1 thumbsdown ✊ fist fist_raised 👊 facepunch fist_oncoming punch 🤛 fist_left 🤜 fist_right ","date":"97-916-16006","objectID":"/tutorial/:15:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#hand-fingers-closed"},{"categories":["Markdown"],"content":" 15.5 Hands icon code icon code 👏 clap 🙌 raised_hands 👐 open_hands 🤝 handshake 🙏 pray ","date":"97-916-16006","objectID":"/tutorial/:15:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#hands"},{"categories":["Markdown"],"content":" 15.6 Hand Prop icon code icon code ✍️ writing_hand 💅 nail_care 🤳 selfie ","date":"97-916-16006","objectID":"/tutorial/:15:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#hand-prop"},{"categories":["Markdown"],"content":" 15.7 Body Parts icon code icon code 💪 muscle 👂 ear 👃 nose 👀 eyes 👁️ eye 👅 tongue 👄 lips ","date":"97-916-16006","objectID":"/tutorial/:15:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#body-parts"},{"categories":["Markdown"],"content":" 15.8 Person icon code icon code 👶 baby 👦 boy 👧 girl :blonde_man: blonde_man person_with_blond_hair 👨 man 👩 woman 👱‍♀️ blonde_woman 👴 older_man 👵 older_woman ","date":"97-916-16006","objectID":"/tutorial/:15:8","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#person"},{"categories":["Markdown"],"content":" 15.9 Person Gesture icon code icon code 🙍‍♀️ frowning_woman person_frowning 🙍‍♂️ frowning_man 🙎‍♀️ person_with_pouting_face pouting_woman 🙎‍♂️ pouting_man 🙅‍♀️ ng_woman no_good no_good_woman 🙅‍♂️ ng_man no_good_man 🙆‍♀️ ok_woman 🙆‍♂️ ok_man 💁‍♀️ information_desk_person sassy_woman tipping_hand_woman 💁‍♂️ sassy_man tipping_hand_man 🙋‍♀️ raising_hand raising_hand_woman 🙋‍♂️ raising_hand_man 🙇 bow bowing_man 🙇‍♀️ bowing_woman 🤦‍♂️ man_facepalming 🤦‍♀️ woman_facepalming 🤷‍♂️ man_shrugging 🤷‍♀️ woman_shrugging ","date":"97-916-16006","objectID":"/tutorial/:15:9","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#person-gesture"},{"categories":["Markdown"],"content":" 15.10 Person Role icon code icon code 👨‍⚕️ man_health_worker 👩‍⚕️ woman_health_worker 👨‍🎓 man_student 👩‍🎓 woman_student 👨‍🏫 man_teacher 👩‍🏫 woman_teacher 👨‍⚖️ man_judge 👩‍⚖️ woman_judge 👨‍🌾 man_farmer 👩‍🌾 woman_farmer 👨‍🍳 man_cook 👩‍🍳 woman_cook 👨‍🔧 man_mechanic 👩‍🔧 woman_mechanic 👨‍🏭 man_factory_worker 👩‍🏭 woman_factory_worker 👨‍💼 man_office_worker 👩‍💼 woman_office_worker 👨‍🔬 man_scientist 👩‍🔬 woman_scientist 👨‍💻 man_technologist 👩‍💻 woman_technologist 👨‍🎤 man_singer 👩‍🎤 woman_singer 👨‍🎨 man_artist 👩‍🎨 woman_artist 👨‍✈️ man_pilot 👩‍✈️ woman_pilot 👨‍🚀 man_astronaut 👩‍🚀 woman_astronaut 👨‍🚒 man_firefighter 👩‍🚒 woman_firefighter 👮‍♂️ cop policeman 👮‍♀️ policewoman 🕵 detective male_detective 🕵️‍♀️ female_detective 💂‍♂️ guardsman 💂‍♀️ guardswoman 👷‍♂️ construction_worker construction_worker_man 👷‍♀️ construction_worker_woman 🤴 prince 👸 princess 👳‍♂️ man_with_turban 👳‍♀️ woman_with_turban 👲 man_with_gua_pi_mao 🤵‍♂️ man_in_tuxedo 👰 bride_with_veil 🤰 pregnant_woman ","date":"97-916-16006","objectID":"/tutorial/:15:10","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#person-role"},{"categories":["Markdown"],"content":" 15.11 Person Fantasy icon code icon code 👼 angel 🎅 santa 🤶 mrs_claus ","date":"97-916-16006","objectID":"/tutorial/:15:11","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#person-fantasy"},{"categories":["Markdown"],"content":" 15.12 Person Activity icon code icon code 💆‍♀️ massage massage_woman 💆‍♂️ massage_man 💇‍♀️ haircut haircut_woman 💇‍♂️ haircut_man 🚶‍♂️ walking walking_man 🚶‍♀️ walking_woman 🏃‍♂️ runner running running_man 🏃‍♀️ running_woman 💃 dancer 🕺 man_dancing 🕴️ business_suit_levitating 👯‍♀️ dancers dancing_women 👯‍♂️ dancing_men ","date":"97-916-16006","objectID":"/tutorial/:15:12","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#person-activity"},{"categories":["Markdown"],"content":" 15.13 Person Sport icon code icon code 🤺 person_fencing 🏇 horse_racing ⛷️ skier 🏂 snowboarder 🏌️‍♂️ golfing_man 🏌️‍♀️ golfing_woman 🏄‍♂️ surfer surfing_man 🏄‍♀️ surfing_woman 🚣‍♂️ rowboat rowing_man 🚣‍♀️ rowing_woman 🏊‍♂️ swimmer swimming_man 🏊‍♀️ swimming_woman ⛹️‍♂️ basketball_man ⛹️‍♀️ basketball_woman 🏋️‍♂️ weight_lifting_man 🏋️‍♀️ weight_lifting_woman 🚴‍♂️ bicyclist biking_man 🚴‍♀️ biking_woman 🚵‍♂️ mountain_bicyclist mountain_biking_man 🚵‍♀️ mountain_biking_woman 🤸‍♂️ man_cartwheeling 🤸‍♀️ woman_cartwheeling 🤼‍♂️ men_wrestling 🤼‍♀️ women_wrestling 🤽‍♂️ man_playing_water_polo 🤽‍♀️ woman_playing_water_polo 🤾‍♂️ man_playing_handball 🤾‍♀️ woman_playing_handball 🤹‍♂️ man_juggling 🤹‍♀️ woman_juggling ","date":"97-916-16006","objectID":"/tutorial/:15:13","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#person-sport"},{"categories":["Markdown"],"content":" 15.14 Person Resting icon code icon code 🛀 bath 🛌 sleeping_bed ","date":"97-916-16006","objectID":"/tutorial/:15:14","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#person-resting"},{"categories":["Markdown"],"content":" 15.15 Family icon code icon code 👭 two_women_holding_hands 👫 couple 👬 two_men_holding_hands 👩‍❤️‍💋‍👨 couplekiss_man_woman 👨‍❤️‍💋‍👨 couplekiss_man_man 👩‍❤️‍💋‍👩 couplekiss_woman_woman 💑 couple_with_heart couple_with_heart_woman_man 👨‍❤️‍👨 couple_with_heart_man_man 👩‍❤️‍👩 couple_with_heart_woman_woman 👨‍👩‍👦 family family_man_woman_boy 👨‍👩‍👧 family_man_woman_girl 👨‍👩‍👧‍👦 family_man_woman_girl_boy 👨‍👩‍👦‍👦 family_man_woman_boy_boy 👨‍👩‍👧‍👧 family_man_woman_girl_girl 👨‍👨‍👦 family_man_man_boy 👨‍👨‍👧 family_man_man_girl 👨‍👨‍👧‍👦 family_man_man_girl_boy 👨‍👨‍👦‍👦 family_man_man_boy_boy 👨‍👨‍👧‍👧 family_man_man_girl_girl 👩‍👩‍👦 family_woman_woman_boy 👩‍👩‍👧 family_woman_woman_girl 👩‍👩‍👧‍👦 family_woman_woman_girl_boy 👩‍👩‍👦‍👦 family_woman_woman_boy_boy 👩‍👩‍👧‍👧 family_woman_woman_girl_girl 👨‍👦 family_man_boy 👨‍👦‍👦 family_man_boy_boy 👨‍👧 family_man_girl 👨‍👧‍👦 family_man_girl_boy 👨‍👧‍👧 family_man_girl_girl 👩‍👦 family_woman_boy 👩‍👦‍👦 family_woman_boy_boy 👩‍👧 family_woman_girl 👩‍👧‍👦 family_woman_girl_boy 👩‍👧‍👧 family_woman_girl_girl ","date":"97-916-16006","objectID":"/tutorial/:15:15","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#family"},{"categories":["Markdown"],"content":" 15.16 Person Symbol icon code icon code 🗣 speaking_head 👤 bust_in_silhouette 👥 busts_in_silhouette 👣 footprints ","date":"97-916-16006","objectID":"/tutorial/:15:16","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#person-symbol"},{"categories":["Markdown"],"content":" 16 Animals \u0026 Nature","date":"97-916-16006","objectID":"/tutorial/:16:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#animals--nature"},{"categories":["Markdown"],"content":" 16.1 Animal Mammal icon code icon code 🐵 monkey_face 🐒 monkey 🦍 gorilla 🐶 dog 🐕 dog2 🐩 poodle 🐺 wolf 🦊 fox_face 🐱 cat 🐈 cat2 🦁 lion 🐯 tiger 🐅 tiger2 🐆 leopard 🐴 horse 🐎 racehorse 🦄 unicorn 🦌 deer 🐮 cow 🐂 ox 🐃 water_buffalo 🐄 cow2 🐷 pig 🐖 pig2 🐗 boar 🐽 pig_nose 🐏 ram 🐑 sheep 🐐 goat 🐪 dromedary_camel 🐫 camel 🐘 elephant 🦏 rhinoceros 🐭 mouse 🐁 mouse2 🐀 rat 🐹 hamster 🐰 rabbit 🐇 rabbit2 🐿️ chipmunk 🦇 bat 🐻 bear 🐨 koala 🐼 panda_face 🐾 feet paw_prints ","date":"97-916-16006","objectID":"/tutorial/:16:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#animal-mammal"},{"categories":["Markdown"],"content":" 16.2 Animal Bird icon code icon code 🦃 turkey 🐔 chicken 🐓 rooster 🐣 hatching_chick 🐤 baby_chick 🐥 hatched_chick 🐦 bird 🐧 penguin 🕊 dove 🦅 eagle 🦆 duck 🦉 owl ","date":"97-916-16006","objectID":"/tutorial/:16:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#animal-bird"},{"categories":["Markdown"],"content":" 16.3 Animal Amphibian icon code icon code 🐸 frog ","date":"97-916-16006","objectID":"/tutorial/:16:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#animal-amphibian"},{"categories":["Markdown"],"content":" 16.4 Animal Reptile icon code icon code 🐊 crocodile 🐢 turtle 🦎 lizard 🐍 snake 🐲 dragon_face 🐉 dragon ","date":"97-916-16006","objectID":"/tutorial/:16:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#animal-reptile"},{"categories":["Markdown"],"content":" 16.5 Animal Marine icon code icon code 🐳 whale 🐋 whale2 🐬 dolphin flipper 🐟 fish 🐠 tropical_fish 🐡 blowfish 🦈 shark 🐙 octopus 🐚 shell ","date":"97-916-16006","objectID":"/tutorial/:16:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#animal-marine"},{"categories":["Markdown"],"content":" 16.6 Animal Bug icon code icon code 🐌 snail 🦋 butterfly 🐛 bug 🐜 ant 🐝 bee honeybee 🪲 beetle 🕷️ spider 🕸️ spider_web 🦂 scorpion ","date":"97-916-16006","objectID":"/tutorial/:16:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#animal-bug"},{"categories":["Markdown"],"content":" 16.7 Plant Flower icon code icon code 💐 bouquet 🌸 cherry_blossom 💮 white_flower 🏵️ rosette 🌹 rose 🥀 wilted_flower 🌺 hibiscus 🌻 sunflower 🌼 blossom 🌷 tulip ","date":"97-916-16006","objectID":"/tutorial/:16:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#plant-flower"},{"categories":["Markdown"],"content":" 16.8 Plant Other icon code icon code 🌱 seedling 🌲 evergreen_tree 🌳 deciduous_tree 🌴 palm_tree 🌵 cactus 🌾 ear_of_rice 🌿 herb ☘️ shamrock 🍀 four_leaf_clover 🍁 maple_leaf 🍂 fallen_leaf 🍃 leaves ","date":"97-916-16006","objectID":"/tutorial/:16:8","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#plant-other"},{"categories":["Markdown"],"content":" 17 Food \u0026 Drink","date":"97-916-16006","objectID":"/tutorial/:17:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#food--drink"},{"categories":["Markdown"],"content":" 17.1 Food Fruit icon code icon code 🍇 grapes 🍈 melon 🍉 watermelon 🍊 mandarin orange tangerine 🍋 lemon 🍌 banana 🍍 pineapple 🍎 apple 🍏 green_apple 🍐 pear 🍑 peach 🍒 cherries 🍓 strawberry 🥝 kiwi_fruit 🍅 tomato ","date":"97-916-16006","objectID":"/tutorial/:17:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#food-fruit"},{"categories":["Markdown"],"content":" 17.2 Food Vegetable icon code icon code 🥑 avocado 🍆 eggplant 🥔 potato 🥕 carrot 🌽 corn 🌶️ hot_pepper 🥒 cucumber 🍄 mushroom 🥜 peanuts 🌰 chestnut ","date":"97-916-16006","objectID":"/tutorial/:17:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#food-vegetable"},{"categories":["Markdown"],"content":" 17.3 Food Prepared icon code icon code 🍞 bread 🥐 croissant 🥖 baguette_bread 🥞 pancakes 🧀 cheese 🍖 meat_on_bone 🍗 poultry_leg 🥓 bacon 🍔 hamburger 🍟 fries 🍕 pizza 🌭 hotdog 🌮 taco 🌯 burrito 🥙 stuffed_flatbread 🥚 egg 🍳 fried_egg 🥘 shallow_pan_of_food 🍲 stew 🥗 green_salad 🍿 popcorn ","date":"97-916-16006","objectID":"/tutorial/:17:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#food-prepared"},{"categories":["Markdown"],"content":" 17.4 Food Asian icon code icon code 🍱 bento 🍘 rice_cracker 🍙 rice_ball 🍚 rice 🍛 curry 🍜 ramen 🍝 spaghetti 🍠 sweet_potato 🍢 oden 🍣 sushi 🍤 fried_shrimp 🍥 fish_cake 🍡 dango ","date":"97-916-16006","objectID":"/tutorial/:17:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#food-asian"},{"categories":["Markdown"],"content":" 17.5 Food Marine icon code icon code 🦀 crab 🦐 shrimp 🦑 squid ","date":"97-916-16006","objectID":"/tutorial/:17:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#food-marine"},{"categories":["Markdown"],"content":" 17.6 Food Sweet icon code icon code 🍦 icecream 🍧 shaved_ice 🍨 ice_cream 🍩 doughnut 🍪 cookie 🎂 birthday 🍰 cake 🍫 chocolate_bar 🍬 candy 🍭 lollipop 🍮 custard 🍯 honey_pot ","date":"97-916-16006","objectID":"/tutorial/:17:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#food-sweet"},{"categories":["Markdown"],"content":" 17.7 Drink icon code icon code 🍼 baby_bottle 🥛 milk_glass ☕ coffee 🍵 tea 🍶 sake 🍾 champagne 🍷 wine_glass 🍸 cocktail 🍹 tropical_drink 🍺 beer 🍻 beers 🥂 clinking_glasses 🥃 tumbler_glass ","date":"97-916-16006","objectID":"/tutorial/:17:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#drink"},{"categories":["Markdown"],"content":" 17.8 Dishware icon code icon code 🍽️ plate_with_cutlery 🍴 fork_and_knife 🥄 spoon 🔪 hocho knife 🏺 amphora ","date":"97-916-16006","objectID":"/tutorial/:17:8","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#dishware"},{"categories":["Markdown"],"content":" 18 Travel \u0026 Places","date":"97-916-16006","objectID":"/tutorial/:18:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#travel--places"},{"categories":["Markdown"],"content":" 18.1 Place Map icon code icon code 🌍 earth_africa 🌎 earth_americas 🌏 earth_asia 🌐 globe_with_meridians 🗺️ world_map 🗾 japan ","date":"97-916-16006","objectID":"/tutorial/:18:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#place-map"},{"categories":["Markdown"],"content":" 18.2 Place Geographic icon code icon code 🏔 mountain_snow ⛰️ mountain 🌋 volcano 🗻 mount_fuji 🏕️ camping ⛱ beach_umbrella 🏜️ desert 🏝️ desert_island 🏞️ national_park ","date":"97-916-16006","objectID":"/tutorial/:18:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#place-geographic"},{"categories":["Markdown"],"content":" 18.3 Place Building icon code icon code 🏟️ stadium 🏛️ classical_building 🏗️ building_construction 🏘 houses 🏚 derelict_house 🏠 house 🏡 house_with_garden 🏢 office 🏣 post_office 🏤 european_post_office 🏥 hospital 🏦 bank 🏨 hotel 🏩 love_hotel 🏪 convenience_store 🏫 school 🏬 department_store 🏭 factory 🏯 japanese_castle 🏰 european_castle 💒 wedding 🗼 tokyo_tower 🗽 statue_of_liberty ","date":"97-916-16006","objectID":"/tutorial/:18:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#place-building"},{"categories":["Markdown"],"content":" 18.4 Place Religious icon code icon code ⛪ church 🕌 mosque 🕍 synagogue ⛩️ shinto_shrine 🕋 kaaba ","date":"97-916-16006","objectID":"/tutorial/:18:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#place-religious"},{"categories":["Markdown"],"content":" 18.5 Place Other icon code icon code ⛲ fountain ⛺ tent 🌁 foggy 🌃 night_with_stars 🏙️ cityscape 🌄 sunrise_over_mountains 🌅 sunrise 🌆 city_sunset 🌇 city_sunrise 🌉 bridge_at_night ♨️ hotsprings 🎠 carousel_horse 🎡 ferris_wheel 🎢 roller_coaster 💈 barber 🎪 circus_tent ","date":"97-916-16006","objectID":"/tutorial/:18:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#place-other"},{"categories":["Markdown"],"content":" 18.6 Transport Ground icon code icon code 🚂 steam_locomotive 🚃 railway_car 🚄 bullettrain_side 🚅 bullettrain_front 🚆 train2 🚇 metro 🚈 light_rail 🚉 station 🚊 tram 🚝 monorail 🚞 mountain_railway 🚋 train 🚌 bus 🚍 oncoming_bus 🚎 trolleybus 🚐 minibus 🚑 ambulance 🚒 fire_engine 🚓 police_car 🚔 oncoming_police_car 🚕 taxi 🚖 oncoming_taxi 🚗 car red_car 🚘 oncoming_automobile 🚙 blue_car 🚚 truck 🚛 articulated_lorry 🚜 tractor 🏎️ racing_car 🏍 motorcycle 🛵 motor_scooter 🚲 bike 🛴 kick_scooter 🚏 busstop 🛣️ motorway 🛤️ railway_track 🛢️ oil_drum ⛽ fuelpump 🚨 rotating_light 🚥 traffic_light 🚦 vertical_traffic_light 🛑 stop_sign 🚧 construction ","date":"97-916-16006","objectID":"/tutorial/:18:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#transport-ground"},{"categories":["Markdown"],"content":" 18.7 Transport Water icon code icon code ⚓ anchor ⛵ boat sailboat 🛶 canoe 🚤 speedboat 🛳️ passenger_ship ⛴️ ferry 🛥️ motor_boat 🚢 ship ","date":"97-916-16006","objectID":"/tutorial/:18:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#transport-water"},{"categories":["Markdown"],"content":" 18.8 Transport Air icon code icon code ✈️ airplane 🛩️ small_airplane 🛫 flight_departure 🛬 flight_arrival 💺 seat 🚁 helicopter 🚟 suspension_railway 🚠 mountain_cableway 🚡 aerial_tramway 🛰️ artificial_satellite 🚀 rocket ","date":"97-916-16006","objectID":"/tutorial/:18:8","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#transport-air"},{"categories":["Markdown"],"content":" 18.9 Hotel icon code icon code 🛎️ bellhop_bell ","date":"97-916-16006","objectID":"/tutorial/:18:9","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#hotel"},{"categories":["Markdown"],"content":" 18.10 Time icon code icon code ⌛ hourglass ⏳ hourglass_flowing_sand ⌚ watch ⏰ alarm_clock ⏱️ stopwatch ⏲️ timer_clock 🕰️ mantelpiece_clock 🕛 clock12 🕧 clock1230 🕐 clock1 🕜 clock130 🕑 clock2 🕝 clock230 🕒 clock3 🕞 clock330 🕓 clock4 🕟 clock430 🕔 clock5 🕠 clock530 🕕 clock6 🕡 clock630 🕖 clock7 🕢 clock730 🕗 clock8 🕣 clock830 🕘 clock9 🕤 clock930 🕙 clock10 🕥 clock1030 🕚 clock11 🕦 clock1130 ","date":"97-916-16006","objectID":"/tutorial/:18:10","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#time"},{"categories":["Markdown"],"content":" 18.11 Sky \u0026 Weather icon code icon code 🌑 new_moon 🌒 waxing_crescent_moon 🌓 first_quarter_moon 🌔 moon waxing_gibbous_moon 🌕 full_moon 🌖 waning_gibbous_moon 🌗 last_quarter_moon 🌘 waning_crescent_moon 🌙 crescent_moon 🌚 new_moon_with_face 🌛 first_quarter_moon_with_face 🌜 last_quarter_moon_with_face 🌡️ thermometer ☀️ sunny 🌝 full_moon_with_face 🌞 sun_with_face ⭐ star 🌟 star2 🌠 stars 🌌 milky_way ☁️ cloud ⛅ partly_sunny ⛈ cloud_with_lightning_and_rain 🌤 sun_behind_small_cloud 🌥 sun_behind_large_cloud 🌦 sun_behind_rain_cloud 🌧 cloud_with_rain 🌨 cloud_with_snow 🌩 cloud_with_lightning 🌪️ tornado 🌫️ fog 🌬 wind_face 🌀 cyclone 🌈 rainbow 🌂 closed_umbrella ☂️ open_umbrella ☂️ umbrella ⛱️ parasol_on_ground ⚡ zap ❄️ snowflake ☃️ snowman_with_snow ☃️ snowman ☄️ comet 🔥 fire 💧 droplet 🌊 ocean ","date":"97-916-16006","objectID":"/tutorial/:18:11","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#sky--weather"},{"categories":["Markdown"],"content":" 19 Activities","date":"97-916-16006","objectID":"/tutorial/:19:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#activities"},{"categories":["Markdown"],"content":" 19.1 Event icon code icon code 🎃 jack_o_lantern 🎄 christmas_tree 🎆 fireworks 🎇 sparkler ✨ sparkles 🎈 balloon 🎉 tada 🎊 confetti_ball 🎋 tanabata_tree 🎍 bamboo 🎎 dolls 🎏 flags 🎐 wind_chime 🎑 rice_scene 🎀 ribbon 🎁 gift 🎗️ reminder_ribbon 🎟 tickets 🎫 ticket ","date":"97-916-16006","objectID":"/tutorial/:19:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#event"},{"categories":["Markdown"],"content":" 19.2 Award Medal icon code icon code 🎖️ medal_military 🏆 trophy 🏅 medal_sports 🥇 1st_place_medal 🥈 2nd_place_medal 🥉 3rd_place_medal ","date":"97-916-16006","objectID":"/tutorial/:19:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#award-medal"},{"categories":["Markdown"],"content":" 19.3 Sport icon code icon code ⚽ soccer ⚾ baseball 🏀 basketball 🏐 volleyball 🏈 football 🏉 rugby_football 🎾 tennis 🎳 bowling 🦗 cricket 🏑 field_hockey 🏒 ice_hockey 🏓 ping_pong 🏸 badminton 🥊 boxing_glove 🥋 martial_arts_uniform 🥅 goal_net ⛳ golf ⛸️ ice_skate 🎣 fishing_pole_and_fish 🎽 running_shirt_with_sash 🎿 ski ","date":"97-916-16006","objectID":"/tutorial/:19:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#sport"},{"categories":["Markdown"],"content":" 19.4 Game icon code icon code 🎯 dart 🎱 8ball 🔮 crystal_ball 🎮 video_game 🕹️ joystick 🎰 slot_machine 🎲 game_die ♠️ spades ♥️ hearts ♦️ diamonds ♣️ clubs 🃏 black_joker 🀄 mahjong 🎴 flower_playing_cards ","date":"97-916-16006","objectID":"/tutorial/:19:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#game"},{"categories":["Markdown"],"content":" 19.5 Arts \u0026 Crafts icon code icon code 🎭 performing_arts 🖼 framed_picture 🎨 art ","date":"97-916-16006","objectID":"/tutorial/:19:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#arts--crafts"},{"categories":["Markdown"],"content":" 20 Objects","date":"97-916-16006","objectID":"/tutorial/:20:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#objects"},{"categories":["Markdown"],"content":" 20.1 Clothing icon code icon code 👓 eyeglasses 🕶️ dark_sunglasses 👔 necktie 👕 shirt tshirt 👖 jeans 👗 dress 👘 kimono 👙 bikini 👚 womans_clothes 👛 purse 👜 handbag 👝 pouch 🛍️ shopping 🎒 school_satchel 👞 mans_shoe shoe 👟 athletic_shoe 👠 high_heel 👡 sandal 👢 boot 👑 crown 👒 womans_hat 🎩 tophat 🎓 mortar_board ⛑️ rescue_worker_helmet 📿 prayer_beads 💄 lipstick 💍 ring 💎 gem ","date":"97-916-16006","objectID":"/tutorial/:20:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#clothing"},{"categories":["Markdown"],"content":" 20.2 Sound icon code icon code 🔇 mute 🔈 speaker 🔉 sound 🔊 loud_sound 📢 loudspeaker 📣 mega 📯 postal_horn 🔔 bell 🔕 no_bell ","date":"97-916-16006","objectID":"/tutorial/:20:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#sound"},{"categories":["Markdown"],"content":" 20.3 Music icon code icon code 🎼 musical_score 🎵 musical_note 🎶 notes 🎙️ studio_microphone 🎚️ level_slider 🎛️ control_knobs 🎤 microphone 🎧 headphones 📻 radio ","date":"97-916-16006","objectID":"/tutorial/:20:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#music"},{"categories":["Markdown"],"content":" 20.4 Musical Instrument icon code icon code 🎷 saxophone 🎸 guitar 🎹 musical_keyboard 🎺 trumpet 🎻 violin 🥁 drum ","date":"97-916-16006","objectID":"/tutorial/:20:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#musical-instrument"},{"categories":["Markdown"],"content":" 20.5 Phone icon code icon code 📱 iphone 📲 calling ☎️ phone telephone 📞 telephone_receiver 📟 pager 📠 fax ","date":"97-916-16006","objectID":"/tutorial/:20:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#phone"},{"categories":["Markdown"],"content":" 20.6 Computer icon code icon code 🔋 battery 🔌 electric_plug 💻 computer 🖥️ desktop_computer 🖨️ printer ⌨️ keyboard 🖱 computer_mouse 🖲️ trackball 💽 minidisc 💾 floppy_disk 💿 cd 📀 dvd ","date":"97-916-16006","objectID":"/tutorial/:20:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#computer"},{"categories":["Markdown"],"content":" 20.7 Light \u0026 Video icon code icon code 🎥 movie_camera 🎞️ film_strip 📽️ film_projector 🎬 clapper 📺 tv 📷 camera 📸 camera_flash 📹 video_camera 📼 vhs 🔍 mag 🔎 mag_right 🕯️ candle 💡 bulb 🔦 flashlight 🏮 izakaya_lantern lantern ","date":"97-916-16006","objectID":"/tutorial/:20:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#light--video"},{"categories":["Markdown"],"content":" 20.8 Book Paper icon code icon code 📔 notebook_with_decorative_cover 📕 closed_book 📖 book open_book 📗 green_book 📘 blue_book 📙 orange_book 📚 books 📓 notebook 📒 ledger 📃 page_with_curl 📜 scroll 📄 page_facing_up 📰 newspaper 🗞️ newspaper_roll 📑 bookmark_tabs 🔖 bookmark 🏷️ label ","date":"97-916-16006","objectID":"/tutorial/:20:8","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#book-paper"},{"categories":["Markdown"],"content":" 20.9 Money icon code icon code 💰 moneybag 💴 yen 💵 dollar 💶 euro 💷 pound 💸 money_with_wings 💳 credit_card 💹 chart ","date":"97-916-16006","objectID":"/tutorial/:20:9","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#money"},{"categories":["Markdown"],"content":" 20.10 Mail icon code icon code ✉️ email envelope 📧 📧 📨 incoming_envelope 📩 envelope_with_arrow 📤 outbox_tray 📥 inbox_tray 📦 package 📫 mailbox 📪 mailbox_closed 📬 mailbox_with_mail 📭 mailbox_with_no_mail 📮 postbox 🗳 ballot_box ","date":"97-916-16006","objectID":"/tutorial/:20:10","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#mail"},{"categories":["Markdown"],"content":" 20.11 Writing icon code icon code ✏️ pencil2 ✒️ black_nib 🖋 fountain_pen 🖊 pen 🖌 paintbrush 🖍 crayon 📝 memo pencil ","date":"97-916-16006","objectID":"/tutorial/:20:11","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#writing"},{"categories":["Markdown"],"content":" 20.12 Office icon code icon code 💼 briefcase 📁 file_folder 📂 open_file_folder 🗂️ card_index_dividers 📅 date 📆 calendar 🗒 spiral_notepad 🗓 spiral_calendar 📇 card_index 📈 chart_with_upwards_trend 📉 chart_with_downwards_trend 📊 bar_chart 📋 clipboard 📌 pushpin 📍 round_pushpin 📎 paperclip 🖇 paperclips 📏 straight_ruler 📐 triangular_ruler ✂️ scissors 🗃️ card_file_box 🗄️ file_cabinet 🗑️ wastebasket ","date":"97-916-16006","objectID":"/tutorial/:20:12","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#office"},{"categories":["Markdown"],"content":" 20.13 Lock icon code icon code 🔒 lock 🔓 unlock 🔏 lock_with_ink_pen 🔐 closed_lock_with_key 🔑 key 🗝️ old_key ","date":"97-916-16006","objectID":"/tutorial/:20:13","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#lock"},{"categories":["Markdown"],"content":" 20.14 Tool icon code icon code 🔨 hammer ⛏️ pick ⚒️ hammer_and_pick 🛠️ hammer_and_wrench 🗡 dagger ⚔️ crossed_swords 🔫 gun 🏹 bow_and_arrow 🛡️ shield 🔧 wrench 🔩 nut_and_bolt ⚙️ gear 🗜 clamp ⚖ balance_scale 🔗 link ⛓️ chains ","date":"97-916-16006","objectID":"/tutorial/:20:14","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#tool"},{"categories":["Markdown"],"content":" 20.15 Science icon code icon code ⚗️ alembic 🔬 microscope 🔭 telescope 🛰️ satellite ","date":"97-916-16006","objectID":"/tutorial/:20:15","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#science"},{"categories":["Markdown"],"content":" 20.16 Medical icon code icon code 💉 syringe 💊 pill ","date":"97-916-16006","objectID":"/tutorial/:20:16","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#medical"},{"categories":["Markdown"],"content":" 20.17 Household icon code icon code 🚪 door 🛏️ bed 🛋️ couch_and_lamp 🚽 toilet 🚿 shower 🛁 bathtub 🛒 shopping_cart ","date":"97-916-16006","objectID":"/tutorial/:20:17","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#household"},{"categories":["Markdown"],"content":" 20.18 Other Object icon code icon code 🚬 smoking ⚰️ coffin ⚱️ funeral_urn 🗿 moyai ","date":"97-916-16006","objectID":"/tutorial/:20:18","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#other-object"},{"categories":["Markdown"],"content":" 21 Symbols","date":"97-916-16006","objectID":"/tutorial/:21:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#symbols"},{"categories":["Markdown"],"content":" 21.1 Transport Sign icon code icon code 🏧 atm 🚮 put_litter_in_its_place 🚰 potable_water ♿ wheelchair 🚹 mens 🚺 womens 🚻 restroom 🚼 baby_symbol 🚾 wc 🛂 passport_control 🛃 customs 🛄 baggage_claim 🛅 left_luggage ","date":"97-916-16006","objectID":"/tutorial/:21:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#transport-sign"},{"categories":["Markdown"],"content":" 21.2 Warning icon code icon code ⚠️ warning 🚸 children_crossing ⛔ no_entry 🚫 no_entry_sign 🚳 no_bicycles 🚭 no_smoking 🚯 do_not_litter 🚱 🚱 🚷 no_pedestrians 📵 no_mobile_phones 🔞 underage ☢ radioactive ☣ biohazard ","date":"97-916-16006","objectID":"/tutorial/:21:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#warning"},{"categories":["Markdown"],"content":" 21.3 Arrow icon code icon code ⬆️ arrow_up ↗️ arrow_upper_right ➡️ arrow_right ↘️ arrow_lower_right ⬇️ arrow_down ↙️ arrow_lower_left ⬅️ arrow_left ↖️ arrow_upper_left ↕️ arrow_up_down ↔️ left_right_arrow ↩️ leftwards_arrow_with_hook ↪️ arrow_right_hook ⤴️ arrow_heading_up ⤵️ arrow_heading_down 🔃 arrows_clockwise 🔄 arrows_counterclockwise 🔙 back 🔚 end 🔛 on 🔜 soon 🔝 top ","date":"97-916-16006","objectID":"/tutorial/:21:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#arrow"},{"categories":["Markdown"],"content":" 21.4 Religion icon code icon code 🛐 place_of_worship ⚛️ atom_symbol 🕉 om ✡️ star_of_david ☸️ wheel_of_dharma ☯️ yin_yang ✝️ latin_cross ☦️ orthodox_cross ☪️ star_and_crescent ☮️ peace_symbol 🕎 menorah 🔯 six_pointed_star ","date":"97-916-16006","objectID":"/tutorial/:21:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#religion"},{"categories":["Markdown"],"content":" 21.5 Zodiac icon code icon code ♈ aries ♉ taurus ♊ gemini ♋ cancer ♌ leo ♍ virgo ♎ libra ♏ scorpius ♐ sagittarius ♑ capricorn ♒ aquarius ♓ pisces ⛎ ophiuchus ","date":"97-916-16006","objectID":"/tutorial/:21:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#zodiac"},{"categories":["Markdown"],"content":" 21.6 Av Symbol icon code icon code 🔀 twisted_rightwards_arrows 🔁 repeat 🔂 repeat_one ▶️ arrow_forward ⏩ fast_forward ⏭ next_track_button ⏯ play_or_pause_button ◀️ arrow_backward ⏪ rewind ⏮️ previous_track_button 🔼 arrow_up_small ⏫ arrow_double_up 🔽 arrow_down_small ⏬ arrow_double_down ⏸ pause_button ⏹ stop_button ⏺ record_button 🎦 cinema 🔅 low_brightness 🔆 high_brightness 📶 signal_strength 📳 vibration_mode 📴 mobile_phone_off ","date":"97-916-16006","objectID":"/tutorial/:21:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#av-symbol"},{"categories":["Markdown"],"content":" 21.7 Math icon code icon code ✖️ heavy_multiplication_x ➕ heavy_plus_sign ➖ heavy_minus_sign ➗ heavy_division_sign ","date":"97-916-16006","objectID":"/tutorial/:21:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#math"},{"categories":["Markdown"],"content":" 21.8 Punctuation icon code icon code ‼️ bangbang ⁉️ interrobang ❓ question ❔ grey_question ❕ grey_exclamation ❗ exclamation heavy_exclamation_mark 〰️ wavy_dash ","date":"97-916-16006","objectID":"/tutorial/:21:8","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#punctuation"},{"categories":["Markdown"],"content":" 21.9 Currency icon code icon code 💱 currency_exchange 💲 heavy_dollar_sign ","date":"97-916-16006","objectID":"/tutorial/:21:9","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#currency"},{"categories":["Markdown"],"content":" 21.10 Keycap icon code icon code #️⃣ hash *️⃣ asterisk 0️⃣ zero 1️⃣ one 2️⃣ two 3️⃣ three 4️⃣ four 5️⃣ five 6️⃣ six 7️⃣ seven 8️⃣ eight 9️⃣ nine 🔟 keycap_ten ","date":"97-916-16006","objectID":"/tutorial/:21:10","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#keycap"},{"categories":["Markdown"],"content":" 21.11 Alphabet icon code icon code 🔠 capital_abcd 🔡 abcd 🔢 1234 🔣 symbols 🔤 abc 🅰️ a 🆎 ab 🅱️ b 🆑 cl 🆒 cool 🆓 free ℹ️ information_source 🆔 id ⓜ️ m 🆕 new 🆖 ng 🅾️ o2 🆗 ok 🅿️ parking 🆘 sos 🆙 up 🆚 vs 🈁 koko 🈂️ sa 🈷️ u6708 🈶 u6709 🈯 u6307 🉐 ideograph_advantage 🈹 u5272 🈚 u7121 🈲 u7981 🉑 accept 🈸 u7533 🈴 u5408 🈳 u7a7a ㊗️ congratulations ㊙️ secret 🈺 u55b6 🈵 u6e80 ","date":"97-916-16006","objectID":"/tutorial/:21:11","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#alphabet"},{"categories":["Markdown"],"content":" 21.12 Geometric icon code icon code 🔴 red_circle 🔵 large_blue_circle ⚫ black_circle ⚪ white_circle ⬛ black_large_square ⬜ white_large_square ◼️ black_medium_square ◻️ white_medium_square ◾ black_medium_small_square ◽ white_medium_small_square ▪️ black_small_square ▫️ white_small_square 🔶 large_orange_diamond 🔷 large_blue_diamond 🔸 small_orange_diamond 🔹 small_blue_diamond 🔺 small_red_triangle 🔻 small_red_triangle_down 💠 diamond_shape_with_a_dot_inside 🔘 radio_button 🔳 white_square_button 🔲 black_square_button ","date":"97-916-16006","objectID":"/tutorial/:21:12","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#geometric"},{"categories":["Markdown"],"content":" 21.13 Other Symbol icon code icon code ♻️ recycle ⚜️ fleur_de_lis 🔱 trident 📛 name_badge 🔰 beginner ⭕ o ✅ white_check_mark ☑️ ballot_box_with_check ✔️ heavy_check_mark ❌ x ❎ negative_squared_cross_mark ➰ curly_loop ➿ loop 〽️ part_alternation_mark ✳️ eight_spoked_asterisk ✴️ eight_pointed_black_star ❇️ sparkle ©️ copyright ®️ registered ™️ tm ","date":"97-916-16006","objectID":"/tutorial/:21:13","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#other-symbol"},{"categories":["Markdown"],"content":" 22 Flags","date":"97-916-16006","objectID":"/tutorial/:22:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#flags"},{"categories":["Markdown"],"content":" 22.1 Common Flags icon code icon code 🏁 checkered_flag 🚩 triangular_flag_on_post 🎌 crossed_flags 🏴 black_flag 🏳 white_flag 🏳️‍🌈 rainbow_flag ","date":"97-916-16006","objectID":"/tutorial/:22:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#common-flags"},{"categories":["Markdown"],"content":" 22.2 Country and Region Flags icon code icon code 🇦🇩 andorra 🇦🇪 united_arab_emirates 🇦🇫 afghanistan 🇦🇬 antigua_barbuda 🇦🇮 anguilla 🇦🇱 albania 🇦🇲 armenia 🇦🇴 angola 🇦🇶 antarctica 🇦🇷 argentina 🇦🇸 american_samoa 🇦🇹 austria 🇦🇺 australia 🇦🇼 aruba 🇦🇽 aland_islands 🇦🇿 azerbaijan 🇧🇦 bosnia_herzegovina 🇧🇧 barbados 🇧🇩 bangladesh 🇧🇪 belgium 🇧🇫 burkina_faso 🇧🇬 bulgaria 🇧🇭 bahrain 🇧🇮 burundi 🇧🇯 benin 🇧🇱 st_barthelemy 🇧🇲 bermuda 🇧🇳 brunei 🇧🇴 bolivia 🇧🇶 caribbean_netherlands 🇧🇷 brazil 🇧🇸 bahamas 🇧🇹 bhutan 🇧🇼 botswana 🇧🇾 belarus 🇧🇿 belize 🇨🇦 canada 🇨🇨 cocos_islands 🇨🇩 congo_kinshasa 🇨🇫 central_african_republic 🇨🇬 congo_brazzaville 🇨🇭 switzerland 🇨🇮 cote_divoire 🇨🇰 cook_islands 🇨🇱 chile 🇨🇲 cameroon 🇨🇳 cn 🇨🇴 colombia 🇨🇷 costa_rica 🇨🇺 cuba 🇨🇻 cape_verde 🇨🇼 curacao 🇨🇽 christmas_island 🇨🇾 cyprus 🇨🇿 czech_republic 🇩🇪 de 🇩🇯 djibouti 🇩🇰 denmark 🇩🇲 dominica 🇩🇴 dominican_republic 🇩🇿 algeria 🇪🇨 ecuador 🇪🇪 estonia 🇪🇬 egypt 🇪🇭 western_sahara 🇪🇷 eritrea 🇪🇸 es 🇪🇹 ethiopia 🇪🇺 eu european_union 🇫🇮 finland 🇫🇯 fiji 🇫🇰 falkland_islands 🇫🇲 micronesia 🇫🇴 faroe_islands 🇫🇷 fr 🇬🇦 gabon 🇬🇧 gb uk 🇬🇩 grenada 🇬🇪 georgia 🇬🇫 french_guiana 🇬🇬 guernsey 🇬🇭 ghana 🇬🇮 gibraltar 🇬🇱 greenland 🇬🇲 gambia 🇬🇳 guinea 🇬🇵 guadeloupe 🇬🇶 equatorial_guinea 🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands 🇬🇹 guatemala 🇬🇺 guam 🇬🇼 guinea_bissau 🇬🇾 guyana 🇭🇰 hong_kong 🇭🇳 honduras 🇭🇷 croatia 🇭🇹 haiti 🇭🇺 hungary 🇮🇨 canary_islands 🇮🇩 indonesia 🇮🇪 ireland 🇮🇱 israel 🇮🇲 isle_of_man 🇮🇳 india 🇮🇴 british_indian_ocean_territory 🇮🇶 iraq 🇮🇷 iran 🇮🇸 iceland 🇮🇹 it 🇯🇪 jersey 🇯🇲 jamaica 🇯🇴 jordan 🇯🇵 jp 🇰🇪 kenya 🇰🇬 kyrgyzstan 🇰🇭 cambodia 🇰🇮 kiribati 🇰🇲 comoros 🇰🇳 st_kitts_nevis 🇰🇵 north_korea 🇰🇷 kr 🇰🇼 kuwait 🇰🇾 cayman_islands 🇰🇿 kazakhstan 🇱🇦 laos 🇱🇧 lebanon 🇱🇨 st_lucia 🇱🇮 liechtenstein 🇱🇰 sri_lanka 🇱🇷 liberia 🇱🇸 lesotho 🇱🇹 lithuania 🇱🇺 luxembourg 🇱🇻 latvia 🇱🇾 libya 🇲🇦 morocco 🇲🇨 monaco 🇲🇩 moldova 🇲🇪 montenegro 🇲🇬 madagascar 🇲🇭 marshall_islands 🇲🇰 macedonia 🇲🇱 mali 🇲🇲 myanmar 🇲🇳 mongolia 🇲🇴 macau 🇲🇵 northern_mariana_islands 🇲🇶 martinique 🇲🇷 mauritania 🇲🇸 montserrat 🇲🇹 malta 🇲🇺 mauritius 🇲🇻 maldives 🇲🇼 malawi 🇲🇽 mexico 🇲🇾 malaysia 🇲🇿 mozambique 🇳🇦 namibia 🇳🇨 new_caledonia 🇳🇪 niger 🇳🇫 norfolk_island 🇳🇬 nigeria 🇳🇮 nicaragua 🇳🇱 netherlands 🇳🇴 norway 🇳🇵 nepal 🇳🇷 nauru 🇳🇺 niue 🇳🇿 new_zealand 🇴🇲 oman 🇵🇦 panama 🇵🇪 peru 🇵🇫 french_polynesia 🇵🇬 papua_new_guinea 🇵🇭 philippines 🇵🇰 pakistan 🇵🇱 poland 🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands 🇵🇷 puerto_rico 🇵🇸 palestinian_territories 🇵🇹 portugal 🇵🇼 palau 🇵🇾 paraguay 🇶🇦 qatar 🇷🇪 reunion 🇷🇴 romania 🇷🇸 serbia 🇷🇺 ru 🇷🇼 rwanda 🇸🇦 saudi_arabia 🇸🇧 solomon_islands 🇸🇨 seychelles 🇸🇩 sudan 🇸🇪 sweden 🇸🇬 singapore 🇸🇭 st_helena 🇸🇮 slovenia 🇸🇰 slovakia 🇸🇱 sierra_leone 🇸🇲 san_marino 🇸🇳 senegal 🇸🇴 somalia 🇸🇷 suriname 🇸🇸 south_sudan 🇸🇹 sao_tome_principe 🇸🇻 el_salvador 🇸🇽 sint_maarten 🇸🇾 syria 🇸🇿 swaziland 🇹🇨 turks_caicos_islands 🇹🇩 chad 🇹🇫 french_southern_territories 🇹🇬 togo 🇹🇭 thailand 🇹🇯 tajikistan 🇹🇰 tokelau 🇹🇱 timor_leste 🇹🇲 turkmenistan 🇹🇳 tunisia 🇹🇴 tonga 🇹🇷 tr 🇹🇹 trinidad_tobago 🇹🇻 tuvalu 🇹🇼 taiwan 🇹🇿 tanzania 🇺🇦 ukraine 🇺🇬 uganda 🇺🇸 us 🇺🇾 uruguay 🇺🇿 uzbekistan 🇻🇦 vatican_city 🇻🇨 st_vincent_grenadines 🇻🇪 venezuela 🇻🇬 british_virgin_islands 🇻🇮 us_virgin_islands 🇻🇳 vietnam 🇻🇺 vanuatu 🇼🇫 wallis_futuna 🇼🇸 samoa 🇽🇰 kosovo 🇾🇪 yemen 🇾🇹 mayotte 🇿🇦 south_africa 🇿🇲 zambia 🇿🇼 zimbabwe Discover what the Hugo - DoIt theme is all about and the core-concepts behind it. ","date":"97-916-16006","objectID":"/tutorial/:22:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#country-and-region-flags"},{"categories":["Markdown"],"content":" 23 RequirementsThanks to the simplicity of Hugo, Hugo is the only dependency of this theme. Just install latest version of  Hugo (\u003e 0.83.0) for your OS (Windows, Linux, macOS). Why not support earlier versions of Hugo? Since WebP Image Processing was introduced in the Hugo 0.83.0, this theme only supports Hugo versions above 0.83.0. Hugo extended version is recommended Since some features of this theme need to processes  SCSS to  CSS, it is recommended to use Hugo extended version for better experience. ","date":"97-916-16006","objectID":"/tutorial/:23:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#requirements"},{"categories":["Markdown"],"content":" 24 InstallationThe following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners. ","date":"97-916-16006","objectID":"/tutorial/:24:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#installation"},{"categories":["Markdown"],"content":" 24.1 Create Your ProjectHugo provides a new command to create a new website: hugo new site my_website cd my_website ","date":"97-916-16006","objectID":"/tutorial/:24:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#create-your-project"},{"categories":["Markdown"],"content":" 24.2 Install the ThemeThe DoIt theme’s repository is: https://github.com/HEIGE-PCloud/DoIt. You can download the latest release  .zip file of the theme and extract it in the themes directory. Alternatively, clone this repository to the themes directory: git clone https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt Or, create an empty git repository and make this repository a submodule of your site directory: git init git submodule add https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt ","date":"97-916-16006","objectID":"/tutorial/:24:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#install-the-theme"},{"categories":["Markdown"],"content":" 24.3 Basic ConfigurationThe following is a basic configuration for the DoIt theme: baseURL = \"http://example.org/\" # [en, zh-cn, fr, ...] determines default content language defaultContentLanguage = \"en\" # language code languageCode = \"en\" title = \"My New Hugo Site\" # Change the default theme to be use when building the site with Hugo theme = \"DoIt\" [params] # DoIt theme version version = \"0.2.X\" [menu] [[menu.main]] identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" weight = 3 # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false Note When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. ","date":"97-916-16006","objectID":"/tutorial/:24:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#basic-configuration"},{"categories":["Markdown"],"content":" 24.4 Create Your First PostHere is the way to create your first post: hugo new posts/first_post.md Feel free to edit the post file by adding some sample content and replacing the title value in the beginning of the file. Note By default all posts and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata, set the property draft: false or add -D/--buildDrafts parameter to hugo command. ","date":"97-916-16006","objectID":"/tutorial/:24:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#create-your-first-post"},{"categories":["Markdown"],"content":" 24.5 Launching the Website LocallyLaunch by using the following command: hugo serve Go to http://localhost:1313. Basic configuration preview Tip When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Note Since the theme use .Scratch in Hugo to implement some features, it is highly recommended that you add --disableFastRender parameter to hugo server command for the live preview of the page you are editing. hugo serve --disableFastRender ","date":"97-916-16006","objectID":"/tutorial/:24:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#launching-the-website-locally"},{"categories":["Markdown"],"content":" 24.6 Build the WebsiteWhen your site is ready to deploy, run the following command: hugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server. Tip The website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use AWS Amplify, Github pages, Render and more… ","date":"97-916-16006","objectID":"/tutorial/:24:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#build-the-website"},{"categories":["Markdown"],"content":" 25 Configuration","date":"97-916-16006","objectID":"/tutorial/:25:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#configuration"},{"categories":["Markdown"],"content":" 25.1 Site ConfigurationIn addition to Hugo global configuration and menu configuration, DoIt lets you define the following parameters in your site configuration (here is a config.toml, whose values are default). Please open the code block below to view the complete sample configuration : [params] # DoIt theme version version = \"0.3.X\" # website title title = \"My New Hugo Site\" # site description description = \"This is My New Hugo Site\" # site keywords keywords = [\"Theme\", \"Hugo\"] # site default theme (\"light\", \"dark\", \"black\", \"auto\") defaultTheme = \"auto\" # public git repo url only then enableGitInfo is true gitRepo = \"\" # which hash function used for SRI, when empty, no SRI is used # (\"sha256\", \"sha384\", \"sha512\", \"md5\") fingerprint = \"\" # date format dateFormat = \"2006-01-02\" # website images for Open Graph and Twitter Cards images = [\"/logo.png\"] # enable PWA support enablePWA = false # [Experimental] cache remote images, more info: https://github.com/HEIGE-PCloud/DoIt/pull/860#issue-1574342372 cacheRemoteImages = false # App icon config # License information license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \"DoIt\" # whether to omit favicon resource links noFavicon = false # modern SVG favicon to use in place of older style .png and .ico files svgFavicon = \"\" # Safari mask icon color iconColor = \"#5bbad5\" # Windows v8-10 tile color tileColor = \"#da532c\" # Search config [params.search] enable = true # type of search engine (\"algolia\", \"fuse\") type = \"fuse\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" [params.search.fuse] # https://fusejs.io/api/options.html isCaseSensitive = false minMatchCharLength = 2 findAllMatches = false location = 0 threshold = 0.3 distance = 100 ignoreLocation = false useExtendedSearch = false ignoreFieldNorm = false # Header config [params.header] # desktop header mode (\"fixed\", \"normal\", \"auto\") desktopMode = \"fixed\" # mobile header mode (\"fixed\", \"normal\", \"auto\") mobileMode = \"auto\" # Theme change mode # theme change mode (\"switch\", \"select\") themeChangeMode = \"select\" # Header title config [params.header.title] # URL of the LOGO logo = \"\" # title name name = \"\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" # whether to use typeit animation for title name typeit = false # Footer config [params.footer] enable = true # Custom content (HTML format is supported) custom = '' # whether to show Hugo and theme info hugo = true # Hosted on (HTML format is supported) # \u003ca title=\"Github Pages\" href=\"https://docs.github.com/en/pages/\" target=\"_blank\" rel=\"noopener noreffer\"\u003eGitHub Pages\u003c/a\u003e hostedOn = '' # whether to show copyright info copyright = true # whether to show the author author = true # Site creation time since = 2019 # ICP info only in China (HTML format is supported) icp = \"\" # license info (HTML format is supported) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (all posts) page config [params.section] # special amount of posts in each section page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # recently updated posts settings [params.section.recentlyUpdated] enable = false rss = fal","date":"97-916-16006","objectID":"/tutorial/:25:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#site-configuration"},{"categories":["Markdown"],"content":" 25.2 Favicons, Browserconfig, ManifestIt is recommended to put your own favicons: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) into /static. They’re easily created via https://realfavicongenerator.net/. Customize browserconfig.xml and site.webmanifest to set theme-color and background-color. ","date":"97-916-16006","objectID":"/tutorial/:25:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#favicons-browserconfig-manifest"},{"categories":["Markdown"],"content":" 25.3 Style Customization Note Hugo extended version is necessary for the style customization. DoIt theme has been built to be as configurable as possible by defining custom .scss style files. The directory including the custom .scss style files is assets/css relative to your project root directory. In assets/css/_override.scss, you can override the variables in themes/DoIt/assets/css/_variables.scss to customize the style. Here is a example: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; In assets/css/_custom.scss, you can add some css style code to customize the style. ","date":"97-916-16006","objectID":"/tutorial/:25:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#style-customization"},{"categories":["Markdown"],"content":" 26 Multilingual and i18nDoIt theme is fully compatible with Hugo multilingual mode, which provides in-browser language switching. Language Switch ","date":"97-916-16006","objectID":"/tutorial/:26:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#multilingual-and-i18n"},{"categories":["Markdown"],"content":" 26.1 Compatibility Language Hugo Code HTML lang Attribute Theme Docs English en en Simplified Chinese zh-cn zh-CN French fr fr Polish pl pl Brazilian Portuguese pt-br pt-BR Italian it it Spanish es es German de de German de de Serbian sr sr Russian ru ru Romanian ro ro Vietnamese vi vi Arabic ar ar Catalan ca ca Hindi hi hi Indonesian id id Telugu te te Thai th th Turkish tr tr Ukrainian uk uk Traditional Chinese zh-tw zh-tw ","date":"97-916-16006","objectID":"/tutorial/:26:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#language-compatibility"},{"categories":["Markdown"],"content":" 26.2 Basic ConfigurationAfter learning how Hugo handle multilingual websites, define your languages in your site configuration. For example with English, Chinese and French website: # [en, zh-cn, fr, pl, ...] determines default content language defaultContentLanguage = \"en\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" weight = 1 [[languages.en.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" weight = 2 [[languages.en.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" weight = 3 [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" # language code, CN only here languageCode = \"zh-CN\" languageName = \"简体中文\" # whether to include Chinese/Japanese/Korean hasCJKLanguage = true [[languages.zh-cn.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" weight = 1 [[languages.zh-cn.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[languages.zh-cn.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 Then, for each new page, append the language code to the file name. Single file my-page.md is split in two files: in English: my-page.en.md in Chinese: my-page.zh-cn.md Note Be aware that only translated pages are displayed in menu. It’s not replaced with default language content. Tip Use Front Matter parameter to translate urls too. ","date":"97-916-16006","objectID":"/tutorial/:26:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#basic-configuration-1"},{"categories":["Markdown"],"content":" 26.3 Overwrite Translation StringsTranslations strings are used for common default values used in the theme. Translations are available in some languages, but you may use another language or want to override default values. To override these values, create a new file in your local i18n folder i18n/\u003clanguageCode\u003e.toml and inspire yourself from themes/DoIt/i18n/en.toml. By the way, as these translations could be used by other people, please take the time to propose a translation by  making a PR to the theme! ","date":"97-916-16006","objectID":"/tutorial/:26:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#overwrite-translation-strings"},{"categories":["Markdown"],"content":" 27 Search Based on algolia, searching is supported in DoIt theme. ","date":"97-916-16006","objectID":"/tutorial/:27:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#search"},{"categories":["Markdown"],"content":" 27.1 Output ConfigurationIn order to generate index.json for searching, add JSON output file type to the home of the outputs part in your site configuration. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"97-916-16006","objectID":"/tutorial/:27:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#output-configuration"},{"categories":["Markdown"],"content":" 27.2 Search ConfigurationBased on index.json generated by Hugo, you could activate searching. Here is the search configuration in your site configuration: [params.search] enable = true # type of search engine (\"algolia\", \"fuse\") type = \"fuse\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" [params.search.fuse] # https://fusejs.io/api/options.html isCaseSensitive = false minMatchCharLength = 2 findAllMatches = false location = 0 threshold = 0.3 distance = 100 ignoreLocation = false useExtendedSearch = false ignoreFieldNorm = false How to choose search engine? The following is a comparison of two search engines: fuse: simple, no need to synchronize index.json, no limit for contentLength, high performance algolia: high performance and low bandwidth, but need to synchronize index.json and limit for contentLength The content of the post is separated by h2 and h3 HTML tag to improve query performance and basically implement full-text search. contentLength is used to limit the max index length of the part starting with h2 and h3 HTML tag. Tips about algolia You need to upload index.json files to algolia to activate searching. You could upload the index.json files by browsers but a CLI tool may be better. Algolia Atomic is a good choice. To be compatible with Hugo multilingual mode, you need to upload different index.json for each language to the different index of algolia, such as zh-cn/index.json or fr/index.json… Find out how to create and organize your content quickly and intuitively in DoIt theme. ","date":"97-916-16006","objectID":"/tutorial/:27:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#search-configuration"},{"categories":["Markdown"],"content":" 28 Contents OrganizationA few suggestions to help you get a good looking site quickly: Keep post pages in the content/posts directory, for example: content/posts/my-first-post.md Keep other pages in the content directory, for example: content/about.md Local resources organization Local Resource Reference There are three ways to reference local resources such as images and music: Using page resources in page bundles. You can reference page resources by the value for Resources.GetMatch or the filepath of the resource relative to the page directory directly. Store resources in the assets directory, which is /assets by default. The filepath of the resource to reference in the post is relative to the assets directory. Store resources in the static directory, which is /static by default. The filepath of the resource to reference in the post is relative to the static directory. The priority of references is also in the above order. There are many places in the theme where the above local resource references can be used, such as links, images, image shortcode, music shortcode and some params in the front matter. Images in page resources or assets directory processing will be supported in the future. It’s really cool! ","date":"97-916-16006","objectID":"/tutorial/:28:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#contents-organization"},{"categories":["Markdown"],"content":" 29 Author SettingsYou are encouraged to create your author profile under mysite/data/authors as author_name.toml. In your profile, you can specify the link, email and name with i18n support. Here is an example for Alice.toml: link = \"https://alice.example.com\" email = \"alice@example.com\" name = \"Alice\" [zh-cn] name = \"爱丽丝\" After creating your author profile, you can specify your name in the front matter of your posts. After that, the post will be automatically signed with your name and link, and will be classified according to its author. --- authors: [Alice] --- You can also specify multiple authors for one post. --- authors: [Alice, Bob, Catherine] --- ","date":"97-916-16006","objectID":"/tutorial/:29:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#author-setup"},{"categories":["Markdown"],"content":" 30 Front MatterHugo allows you to add front matter in yaml, toml or json to your content files. Note Not all of the below front matters need to be set in each of your posts. It is necessary only if the front matters and the page part in your site configuration are inconsistent. Here is a front matter example: --- title: \"My First Post\" subtitle: \"\" date: 2020-03-04T15:58:26+08:00 lastmod: 2020-03-04T15:58:26+08:00 draft: true authors: [] description: \"\" license: \"\" images: [] tags: [] categories: [] series: [] series_weight: 1 seriesNavigation: true featuredImage: \"\" featuredImagePreview: \"\" hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: true ruby: true fraction: true fontawesome: true linkToMarkdown: true linkToSource: false linkToEdit: false linkToReport: false rssFullText: false license: '' toc: enable: true auto: true code: copy: true # ... table: sort: true # ... math: enable: true # ... mapbox: accessToken: \"\" # ... share: enable: true # ... comment: enable: true # ... library: css: # someCSS = \"some.css\" # located in \"assets/\" # Or # someCSS = \"https://cdn.example.com/some.css\" js: # someJS = \"some.js\" # located in \"assets/\" # Or # someJS = \"https://cdn.example.com/some.js\" seo: images: [] # ... outdatedArticleReminder: enable: false # ... sponsor: enable: false # ... related: enable: false count: 5 --- title: the title for the content. subtitle: the subtitle for the content. date: the datetime assigned to this page, which is usually fetched from the date field in front matter, but this behaviour is configurabl in the site configuration. lastmod: the datetime at which the content was last modified. draft: if true, the content will not be rendered unless the --buildDrafts/-D flag is passed to the hugo command. authors: the list of authors for the content. description: the description for the content. license: the special license for this content. images: page images for Open Graph and Twitter Cards. tags: the tags for the content. categories: the categories for the content. series: the series for the content. series_weight: define the position of the post in the series. seriesNavigation: whether to enable series navigation. featuredImage: the featured image for the content. featuredImagePreview: the featured image for the content preview in the home page. hiddenFromHomePage: if true, the content will not be shown in the home page. hiddenFromSearch: if true, the content will not be shown in the search results. twemoji: if true, the content will enable the twemoji. lightgallery: if true, images in the content will be shown as the gallery. ruby: if true, the content will enable the ruby extended syntax. fraction: if true, the content will enable the fraction extended syntax. fontawesome: if true, the content will enable the Font Awesome extended syntax. linkToMarkdown: if true, the footer of the content will be shown the link to the original Markdown file. linkToSource: if false, turn off the view source link in the footer. You can set it to the link to the source file of the post. Use the magic variable {path} to specify the relative path of the post, for example, the {path} for this post is posts/theme-documentation-content/index.en.md. linkToEdit: if false, turn off the edit this page link in the footer. You can set it to the link to edit the page. Use the magic variable {path} to specify the relative path of the post, for example, the {path} for this post is posts/theme-documentation-content/index.en.md. linkToReport: if false, turn off the report issue link in the footer. You can set it to the link to report issues about the page. Use the magic variables: {path} to specify the relative path of the post, for example, the {path} for this post is posts/theme-documentation-content/index.en.md, {title} to specify the title of the post, for example, the {title} for this post is Theme Documentation - Content and {url} to specify the url of the post, for example, the {url} for this post is http","date":"97-916-16006","objectID":"/tutorial/:30:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#front-matter"},{"categories":["Markdown"],"content":" 31 Content SummariesDoIt theme uses the summary of the content to display abstract information in the home page. Hugo can generate summaries of your content. Summary Preview ","date":"97-916-16006","objectID":"/tutorial/:31:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#content-summaries"},{"categories":["Markdown"],"content":" 31.1 Automatic Summary SplittingBy default, Hugo automatically takes the first 70 words of your content as its summary. You may customize the summary length by setting summaryLength in the site configuration. If you are creating content in a CJKChinese/Japanese/Korean language and want to use Hugo’s automatic summary splitting, set hasCJKLanguage to true in your site configuration. ","date":"97-916-16006","objectID":"/tutorial/:31:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#automatic-summary-splitting"},{"categories":["Markdown"],"content":" 31.2 Manual Summary SplittingAlternatively, you may add the \u003c!--more--\u003e summary divider where you want to split the article. Content that comes before the summary divider will be used as that content’s summary. Note Be careful to enter \u003c!--more--\u003e exactly; i.e., all lowercase and with no whitespace. ","date":"97-916-16006","objectID":"/tutorial/:31:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#manual-summary-splitting"},{"categories":["Markdown"],"content":" 31.3 Front Matter SummaryYou might want your summary to be something other than the text that starts the article. In this case you can provide a separate summary in the summary variable of the article front matter. ","date":"97-916-16006","objectID":"/tutorial/:31:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#front-matter-summary"},{"categories":["Markdown"],"content":" 31.4 Use Description as SummaryYou might want your description in the description variable of the article front matter as the summary. You may add the \u003c!--more--\u003e summary divider at the start of the article. Keep content that comes before the summary divider empty. Then DoIt theme will use your description as the summary. ","date":"97-916-16006","objectID":"/tutorial/:31:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#use-description-as-summary"},{"categories":["Markdown"],"content":" 31.5 Priority Order of Summary SelectionBecause there are multiple ways in which a summary can be specified it is useful to understand the order. It is as follows: If there is a \u003c!--more--\u003e summary divider present in the article but no content is before the divider, the description will be used as the summary. If there is a \u003c!--more--\u003e summary divider present in the article the text up to the divider will be provided as per the manual summary split method. If there is a summary variable in the article front matter the value of the variable will be provided as per the front matter summary method. The text at the start of the article will be provided as per the automatic summary split method. Note It is not recommended to include rich text block elements in the summary, which will cause typographic errors. Such as code blocks, pictures, tables, etc. ","date":"97-916-16006","objectID":"/tutorial/:31:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#priority-order-of-summary-selection"},{"categories":["Markdown"],"content":" 32 Basic Markdown SyntaxThis part is shown in the basic markdown syntax page. ","date":"97-916-16006","objectID":"/tutorial/:32:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#basic-markdown-syntax"},{"categories":["Markdown"],"content":" 33 Extended Markdown SyntaxDoIt theme has some extended syntax elements for you to write articles. ","date":"97-916-16006","objectID":"/tutorial/:33:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#extended-markdown-syntax"},{"categories":["Markdown"],"content":" 33.1 Emoji SupportThis part is shown in the emoji support page. ","date":"97-916-16006","objectID":"/tutorial/:33:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#emoji-support"},{"categories":["Markdown"],"content":" 33.2 Mathematical FormulaDoIt theme supports mathematical formulas based on $ \\KaTeX $. Set the property enable = true under [params.math] in your site configuration and the property math: true of the article front matter to enable the automatic rendering of mathematical formulas. Tip Here is a list of $ \\TeX $ functions supported by $ \\KaTeX $. 33.2.1 Block FormulaThe default block delimiters are $$/$$ and \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] The rendered output looks like this: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 33.2.2 Inline FormulaThe default inline delimiters are $/$ and \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ and \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) The rendered output looks like this: $ c = \\pm\\sqrt{a^2 + b^2} $ and \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) Tip You can add more block and inline delimiters in your site configuration. Info You can use the math shortcode to avoid issues causing by special characters. 33.2.3 Copy-texCopy-tex is an extension for $ \\KaTeX $. By the extension, when selecting and copying $ \\KaTeX $ rendered elements, copies their $ \\LaTeX $ source to the clipboard. Set the property copyTex = true under [params.math] in your site configuration to enable Copy-tex. Select and copy the formula rendered in the previous section, and you can find that the copied content is the LaTeX source code. 33.2.4 mhchemmhchem is an extension for $ \\KaTeX $. By the extension, you can write beautiful chemical equations easily in the article. Set the property mhchem = true under [params.math] in your site configuration to enable mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ The rendered output looks like this: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"97-916-16006","objectID":"/tutorial/:33:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#mathematical-formula"},{"categories":["Markdown"],"content":" 33.2 Mathematical FormulaDoIt theme supports mathematical formulas based on $ \\KaTeX $. Set the property enable = true under [params.math] in your site configuration and the property math: true of the article front matter to enable the automatic rendering of mathematical formulas. Tip Here is a list of $ \\TeX $ functions supported by $ \\KaTeX $. 33.2.1 Block FormulaThe default block delimiters are $$/$$ and \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] The rendered output looks like this: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 33.2.2 Inline FormulaThe default inline delimiters are $/$ and \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ and \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) The rendered output looks like this: $ c = \\pm\\sqrt{a^2 + b^2} $ and \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) Tip You can add more block and inline delimiters in your site configuration. Info You can use the math shortcode to avoid issues causing by special characters. 33.2.3 Copy-texCopy-tex is an extension for $ \\KaTeX $. By the extension, when selecting and copying $ \\KaTeX $ rendered elements, copies their $ \\LaTeX $ source to the clipboard. Set the property copyTex = true under [params.math] in your site configuration to enable Copy-tex. Select and copy the formula rendered in the previous section, and you can find that the copied content is the LaTeX source code. 33.2.4 mhchemmhchem is an extension for $ \\KaTeX $. By the extension, you can write beautiful chemical equations easily in the article. Set the property mhchem = true under [params.math] in your site configuration to enable mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ The rendered output looks like this: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"97-916-16006","objectID":"/tutorial/:33:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#block-formula"},{"categories":["Markdown"],"content":" 33.2 Mathematical FormulaDoIt theme supports mathematical formulas based on $ \\KaTeX $. Set the property enable = true under [params.math] in your site configuration and the property math: true of the article front matter to enable the automatic rendering of mathematical formulas. Tip Here is a list of $ \\TeX $ functions supported by $ \\KaTeX $. 33.2.1 Block FormulaThe default block delimiters are $$/$$ and \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] The rendered output looks like this: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 33.2.2 Inline FormulaThe default inline delimiters are $/$ and \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ and \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) The rendered output looks like this: $ c = \\pm\\sqrt{a^2 + b^2} $ and \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) Tip You can add more block and inline delimiters in your site configuration. Info You can use the math shortcode to avoid issues causing by special characters. 33.2.3 Copy-texCopy-tex is an extension for $ \\KaTeX $. By the extension, when selecting and copying $ \\KaTeX $ rendered elements, copies their $ \\LaTeX $ source to the clipboard. Set the property copyTex = true under [params.math] in your site configuration to enable Copy-tex. Select and copy the formula rendered in the previous section, and you can find that the copied content is the LaTeX source code. 33.2.4 mhchemmhchem is an extension for $ \\KaTeX $. By the extension, you can write beautiful chemical equations easily in the article. Set the property mhchem = true under [params.math] in your site configuration to enable mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ The rendered output looks like this: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"97-916-16006","objectID":"/tutorial/:33:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#inline-formula"},{"categories":["Markdown"],"content":" 33.2 Mathematical FormulaDoIt theme supports mathematical formulas based on $ \\KaTeX $. Set the property enable = true under [params.math] in your site configuration and the property math: true of the article front matter to enable the automatic rendering of mathematical formulas. Tip Here is a list of $ \\TeX $ functions supported by $ \\KaTeX $. 33.2.1 Block FormulaThe default block delimiters are $$/$$ and \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] The rendered output looks like this: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 33.2.2 Inline FormulaThe default inline delimiters are $/$ and \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ and \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) The rendered output looks like this: $ c = \\pm\\sqrt{a^2 + b^2} $ and \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) Tip You can add more block and inline delimiters in your site configuration. Info You can use the math shortcode to avoid issues causing by special characters. 33.2.3 Copy-texCopy-tex is an extension for $ \\KaTeX $. By the extension, when selecting and copying $ \\KaTeX $ rendered elements, copies their $ \\LaTeX $ source to the clipboard. Set the property copyTex = true under [params.math] in your site configuration to enable Copy-tex. Select and copy the formula rendered in the previous section, and you can find that the copied content is the LaTeX source code. 33.2.4 mhchemmhchem is an extension for $ \\KaTeX $. By the extension, you can write beautiful chemical equations easily in the article. Set the property mhchem = true under [params.math] in your site configuration to enable mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ The rendered output looks like this: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"97-916-16006","objectID":"/tutorial/:33:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#copy-tex"},{"categories":["Markdown"],"content":" 33.2 Mathematical FormulaDoIt theme supports mathematical formulas based on $ \\KaTeX $. Set the property enable = true under [params.math] in your site configuration and the property math: true of the article front matter to enable the automatic rendering of mathematical formulas. Tip Here is a list of $ \\TeX $ functions supported by $ \\KaTeX $. 33.2.1 Block FormulaThe default block delimiters are $$/$$ and \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] The rendered output looks like this: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 33.2.2 Inline FormulaThe default inline delimiters are $/$ and \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ and \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) The rendered output looks like this: $ c = \\pm\\sqrt{a^2 + b^2} $ and \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) Tip You can add more block and inline delimiters in your site configuration. Info You can use the math shortcode to avoid issues causing by special characters. 33.2.3 Copy-texCopy-tex is an extension for $ \\KaTeX $. By the extension, when selecting and copying $ \\KaTeX $ rendered elements, copies their $ \\LaTeX $ source to the clipboard. Set the property copyTex = true under [params.math] in your site configuration to enable Copy-tex. Select and copy the formula rendered in the previous section, and you can find that the copied content is the LaTeX source code. 33.2.4 mhchemmhchem is an extension for $ \\KaTeX $. By the extension, you can write beautiful chemical equations easily in the article. Set the property mhchem = true under [params.math] in your site configuration to enable mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ The rendered output looks like this: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"97-916-16006","objectID":"/tutorial/:33:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#mhchem"},{"categories":["Markdown"],"content":" 33.3 Ruby AnnotationAn extended Markdown syntax for ruby annotation is supported in DoIt theme: [Hugo]^(An open-source static site generator) The rendered output looks like this: HugoAn open-source static site generator ","date":"97-916-16006","objectID":"/tutorial/:33:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#ruby"},{"categories":["Markdown"],"content":" 33.4 Fraction An extended Markdown syntax for fraction is supported in DoIt theme: [Light]/[Dark] [99]/[100] The rendered output looks like this: Light/Dark 90/100 ","date":"97-916-16006","objectID":"/tutorial/:33:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#fraction"},{"categories":["Markdown"],"content":" 33.5 Font AwesomeDoIt theme uses Font Awesome as the icon library. You can easily use these icons in your articles. Get the class of icons you wanted from the Font Awesome website. Gone camping! :(fas fa-campground fa-fw): Be back soon. That is so funny! :(far fa-grin-tears): The rendered output looks like this: Gone camping!  Be back soon. That is so funny! ","date":"97-916-16006","objectID":"/tutorial/:33:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#fontawesome"},{"categories":["Markdown"],"content":" 33.6 Escape characterIn some special cases (when writing this theme documentation ), your content will conflict with basic or extended Markdown syntax, and it is inevitable. The escape character syntax can help you build the content you wanted: {?X} -\u003e X For example, two : will enable emoji syntax, which is not the behavior you want. The escape character syntax is like this: {?:}joy: The rendered output looks like this: :joy: instead of 😂 Tip This is related to an issue for Hugo, which has not been resolved. Another example is: [link{?]}(#escape-character) The rendered output looks like this: [link](#escape-character) instead of link. Hugo provides multiple built-in shortcodes for author convenience and to keep your markdown content clean. Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities. But this happens to be a bad idea. Everyone uses Markdown because it’s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible. To avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet that can generate reasonable HTML code and conforms to Markdown’s design philosophy. Hugo ships with a set of predefined shortcodes that represent very common usage. These shortcodes are provided for author convenience and to keep your markdown content clean. ","date":"97-916-16006","objectID":"/tutorial/:33:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#escape-character"},{"categories":["Markdown"],"content":" 34 figureDocumentation of figure Example figure input: {{\u003c figure src=\"/images/lighthouse.webp\" title=\"Lighthouse (figure)\" \u003e}} The rendered output looks like this: Lighthouse (figure) The HTML looks like this: \u003cfigure\u003e \u003cimg src=\"/images/lighthouse.webp\"/\u003e \u003cfigcaption\u003e \u003ch4\u003eLighthouse (figure)\u003c/h4\u003e \u003c/figcaption\u003e \u003c/figure\u003e ","date":"97-916-16006","objectID":"/tutorial/:34:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#figure"},{"categories":["Markdown"],"content":" 35 gistDocumentation of gist Example gist input: {{\u003c gist spf13 7896402 \u003e}} The rendered output looks like this: The HTML looks like this: \u003cscript type=\"application/javascript\" src=\"https://gist.github.com/spf13/7896402.js\"\u003e\u003c/script\u003e ","date":"97-916-16006","objectID":"/tutorial/:35:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#gist"},{"categories":["Markdown"],"content":" 36 highlightDocumentation of highlight Example highlight input: {{\u003c highlight html \u003e}} \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e {{\u003c /highlight \u003e}} The rendered output looks like this: \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"97-916-16006","objectID":"/tutorial/:36:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#highlight"},{"categories":["Markdown"],"content":" 37 paramDocumentation of param Example param input: {{\u003c param description \u003e}} The rendered output looks like this: This article shows the basic Markdown syntax and format. ","date":"97-916-16006","objectID":"/tutorial/:37:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#param"},{"categories":["Markdown"],"content":" 38 ref and relrefDocumentation of ref and relref ","date":"97-916-16006","objectID":"/tutorial/:38:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#ref-and-relref"},{"categories":["Markdown"],"content":" 39 tweetDocumentation of tweet Example tweet input: {{\u003c tweet user=\"SanDiegoZoo\" id=\"1453110110599868418\" \u003e}} Owl bet you'll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC — San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 ","date":"97-916-16006","objectID":"/tutorial/:39:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#tweet"},{"categories":["Markdown"],"content":" 40 vimeoDocumentation of vimeo Example vimeo input: {{\u003c vimeo 146022717 \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:40:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#vimeo"},{"categories":["Markdown"],"content":" 41 youtubeDocumentation of youtube Example youtube input: {{\u003c youtube w7Ft2ymGmfc \u003e}} The rendered output looks like this: DoIt theme provides multiple shortcodes on top of built-in ones in Hugo. ","date":"97-916-16006","objectID":"/tutorial/:41:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#youtube"},{"categories":["Markdown"],"content":" 42 style Note Hugo extended version is necessary for style shortcode. style is a shortcode to insert custom style in your post. The style shortcode has two positional parameters. The first one is the custom style content, which supports nesting syntax in  SASS and \u0026 referring to this parent HTML element. And the second one is the tag name of the HTML element wrapping the content you want to change the style, and whose default value is div. Example style input: {{\u003c style \"text-align:right; strong{color:#00b1ff;}\" \u003e}} This is a **right-aligned** paragraph. {{\u003c /style \u003e}} The rendered output looks like this: This is a right-aligned paragraph. ","date":"97-916-16006","objectID":"/tutorial/:42:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#style"},{"categories":["Markdown"],"content":" 43 link link shortcode is an alternative to Markdown link syntax. link shortcode can provide some other features and can be used in code blocks. The complete usage of local resource references is supported. The link shortcode has the following named parameters: href [required] (first positional parameter) Destination of the link. content [optional] (second positional parameter) Content of the link, the default value is the value of href parameter. Markdown or HTML format is supported. title [optional] (third positional parameter) title attribute of the HTML a tag, which will be shown when hovering on the link. class [optional] class attribute of the HTML a tag. rel [optional] Additional rel attributes of the HTML a tag. Example link input: {{\u003c link \"https://assemble.io\" \u003e}} Or {{\u003c link href=\"https://assemble.io\" \u003e}} {{\u003c link \"mailto:contact@revolunet.com\" \u003e}} Or {{\u003c link href=\"mailto:contact@revolunet.com\" \u003e}} {{\u003c link \"https://assemble.io\" Assemble \u003e}} Or {{\u003c link href=\"https://assemble.io\" content=Assemble \u003e}} The rendered output looks like this: https://assemble.io mailto:contact@revolunet.com Assemble Example link input with a title: {{\u003c link \"https://github.com/upstage/\" Upstage \"Visit Upstage!\" \u003e}} Or {{\u003c link href=\"https://github.com/upstage/\" content=Upstage title=\"Visit Upstage!\" \u003e}} The rendered output looks like this (hover over the link, there should be a tooltip): Upstage ","date":"97-916-16006","objectID":"/tutorial/:43:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#link"},{"categories":["Markdown"],"content":" 44 image image shortcode is an alternative to figure shortcode. image shortcode can take full advantage of the dependent library lightgallery.js. The complete usage of local resource references is supported. The image shortcode has the following named parameters: src [required] (first positional parameter) URL of the image to be displayed. alt [optional] (second positional parameter) Alternate text for the image if the image cannot be displayed, the default value is the value of the src parameter. Markdown or HTML format is supported. caption [optional] (third positional parameter) Image caption. Markdown or HTML format is supported. title [optional] Image title that will be shown when hovering on the image. class [optional] class attribute of the HTML figure tag. src_s [optional] URL of the image thumbnail, used for lightgallery, the default value is the value of the src parameter. src_l [optional] URL of the HD image, used for lightgallery, the default value is the value of the src parameter. height [optional] height attribute of the image. width [optional] width attribute of the image. linked [optional] Whether the image needs to be hyperlinked, the default value is true. rel [optional] Additional rel attributes of the HTML a tag, if linked parameter is set to true. Example image input: {{\u003c image src=\"/images/lighthouse.webp\" caption=\"Lighthouse (`image`)\" src_s=\"/images/lighthouse-small.webp\" src_l=\"/images/lighthouse-large.webp\" \u003e}} The rendered output looks like this: Lighthouse (image) ","date":"97-916-16006","objectID":"/tutorial/:44:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#image"},{"categories":["Markdown"],"content":" 45 admonitionThe admonition shortcode supports 12 types of banners to help you put a notice on your page. Markdown or HTML format in the content is supported. Note A note banner Abstract An abstract banner Info A info banner Tip A tip banner Success A success banner Question A question banner Warning A warning banner Failure A failure banner Danger A danger banner Bug A bug banner Example An example banner Quote A quote banner The admonition shortcode has the following named parameters: type [optional] (first positional parameter) Type of the admonition banner, the default value is note. title [optional] (second positional parameter) Title of the admonition banner, the default value is the value of the type parameter. open [optional] (third positional parameter) Whether the content will be expandable by default, the default value is true. Example admonition input: {{\u003c admonition type=tip title=\"This is a tip\" open=false \u003e}} A **tip** banner {{\u003c /admonition \u003e}} Or {{\u003c admonition tip \"This is a tip\" false \u003e}} A **tip** banner {{\u003c /admonition \u003e}} The rendered output looks like this: This is a tip A tip banner ","date":"97-916-16006","objectID":"/tutorial/:45:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#admonition"},{"categories":["Markdown"],"content":" 46 mermaidmermaid is a library helping you to generate diagrams and flowcharts from text, in a similar manner as Markdown. Just insert your mermaid code in the mermaid shortcode and that’s it. ","date":"97-916-16006","objectID":"/tutorial/:46:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#mermaid"},{"categories":["Markdown"],"content":" 46.1 FlowchartExample flowchart mermaid input: {{\u003c mermaid \u003e}}graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} The rendered output looks like this: graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] ","date":"97-916-16006","objectID":"/tutorial/:46:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#flowchart"},{"categories":["Markdown"],"content":" 46.2 Sequence DiagramExample sequence diagram mermaid input: {{\u003c mermaid \u003e}}sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! {{\u003c /mermaid \u003e}} The rendered output looks like this: sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! ","date":"97-916-16006","objectID":"/tutorial/:46:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#sequence-diagram"},{"categories":["Markdown"],"content":" 46.3 GANTTExample GANTT mermaid input: {{\u003c mermaid \u003e}}gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u003c /mermaid \u003e}} The rendered output looks like this: gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d ","date":"97-916-16006","objectID":"/tutorial/:46:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#gantt"},{"categories":["Markdown"],"content":" 46.4 Class DiagramExample class diagram mermaid input: {{\u003c mermaid \u003e}}classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label {{\u003c /mermaid \u003e}} The rendered output looks like this: classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label ","date":"97-916-16006","objectID":"/tutorial/:46:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#class-diagram"},{"categories":["Markdown"],"content":" 46.5 State DiagramExample state diagram mermaid input: {{\u003c mermaid \u003e}}stateDiagram [*] --\u003e Still Still --\u003e [*] Still --\u003e Moving Moving --\u003e Still Moving --\u003e Crash Crash --\u003e [*] {{\u003c /mermaid \u003e}} The rendered output looks like this: stateDiagram [*] --\u003e Still Still --\u003e [*] Still --\u003e Moving Moving --\u003e Still Moving --\u003e Crash Crash --\u003e [*] ","date":"97-916-16006","objectID":"/tutorial/:46:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#state-diagram"},{"categories":["Markdown"],"content":" 46.6 Git GraphExample git graph mermaid input: {{\u003c mermaid \u003e}}gitGraph commit branch hotfix checkout hotfix commit branch develop checkout develop commit id:\"ash\" tag:\"abc\" branch featureB checkout featureB commit type:HIGHLIGHT checkout main checkout hotfix commit type:NORMAL checkout develop commit type:REVERSE checkout featureB commit checkout main merge hotfix checkout featureB commit checkout develop branch featureA commit checkout develop merge hotfix checkout featureA commit checkout featureB commit checkout develop merge featureA branch release checkout release commit checkout main commit checkout release merge main checkout develop merge release {{\u003c /mermaid \u003e}} The rendered output looks like this: gitGraph commit branch hotfix checkout hotfix commit branch develop checkout develop commit id:\"ash\" tag:\"abc\" branch featureB checkout featureB commit type:HIGHLIGHT checkout main checkout hotfix commit type:NORMAL checkout develop commit type:REVERSE checkout featureB commit checkout main merge hotfix checkout featureB commit checkout develop branch featureA commit checkout develop merge hotfix checkout featureA commit checkout featureB commit checkout develop merge featureA branch release checkout release commit checkout main commit checkout release merge main checkout develop merge release ","date":"97-916-16006","objectID":"/tutorial/:46:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#git-graph"},{"categories":["Markdown"],"content":" 46.7 PieExample pie mermaid input: {{\u003c mermaid \u003e}}pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 {{\u003c /mermaid \u003e}} The rendered output looks like this: pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 ","date":"97-916-16006","objectID":"/tutorial/:46:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#pie"},{"categories":["Markdown"],"content":" 47 echartsECharts is a library helping you to generate interactive data visualization. The basic chart types ECharts supports include line series, bar series, scatter series, pie charts, candle-stick series, boxplot series for statistics, map series, heatmap series, lines series for directional information, graph series for relationships, treemap series, sunburst series, parallel series for multi-dimensional data, funnel series, gauge series. And it’s extremely easy to create a combinition of them with ECharts. Just insert your ECharts option in JSON/YAML/TOML format in the echarts shortcode and that’s it. Example echarts input in JSON format: {{\u003c echarts \u003e}} { \"title\": { \"text\": \"Summary Line Chart\", \"top\": \"2%\", \"left\": \"center\" }, \"tooltip\": { \"trigger\": \"axis\" }, \"legend\": { \"data\": [\"Email Marketing\", \"Affiliate Advertising\", \"Video Advertising\", \"Direct View\", \"Search Engine\"], \"top\": \"10%\" }, \"grid\": { \"left\": \"5%\", \"right\": \"5%\", \"bottom\": \"5%\", \"top\": \"20%\", \"containLabel\": true }, \"toolbox\": { \"feature\": { \"saveAsImage\": { \"title\": \"Save as Image\" } } }, \"xAxis\": { \"type\": \"category\", \"boundaryGap\": false, \"data\": [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"] }, \"yAxis\": { \"type\": \"value\" }, \"series\": [ { \"name\": \"Email Marketing\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [120, 132, 101, 134, 90, 230, 210] }, { \"name\": \"Affiliate Advertising\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [220, 182, 191, 234, 290, 330, 310] }, { \"name\": \"Video Advertising\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [150, 232, 201, 154, 190, 330, 410] }, { \"name\": \"Direct View\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [320, 332, 301, 334, 390, 330, 320] }, { \"name\": \"Search Engine\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [820, 932, 901, 934, 1290, 1330, 1320] } ] } {{\u003c /echarts \u003e}} The same in YAML format: {{\u003c echarts \u003e}} title: text: Summary Line Chart top: 2% left: center tooltip: trigger: axis legend: data: - Email Marketing - Affiliate Advertising - Video Advertising - Direct View - Search Engine top: 10% grid: left: 5% right: 5% bottom: 5% top: 20% containLabel: true toolbox: feature: saveAsImage: title: Save as Image xAxis: type: category boundaryGap: false data: - Monday - Tuesday - Wednesday - Thursday - Friday - Saturday - Sunday yAxis: type: value series: - name: Email Marketing type: line stack: Total data: - 120 - 132 - 101 - 134 - 90 - 230 - 210 - name: Affiliate Advertising type: line stack: Total data: - 220 - 182 - 191 - 234 - 290 - 330 - 310 - name: Video Advertising type: line stack: Total data: - 150 - 232 - 201 - 154 - 190 - 330 - 410 - name: Direct View type: line stack: Total data: - 320 - 332 - 301 - 334 - 390 - 330 - 320 - name: Search Engine type: line stack: Total data: - 820 - 932 - 901 - 934 - 1290 - 1330 - 1320 {{\u003c /echarts \u003e}} The same in TOML format: {{\u003c echarts \u003e}} [title] text = \"Summary Line Chart\" top = \"2%\" left = \"center\" [tooltip] trigger = \"axis\" [legend] data = [ \"Email Marketing\", \"Affiliate Advertising\", \"Video Advertising\", \"Direct View\", \"Search Engine\" ] top = \"10%\" [grid] left = \"5%\" right = \"5%\" bottom = \"5%\" top = \"20%\" containLabel = true [toolbox] [toolbox.feature] [toolbox.feature.saveAsImage] title = \"Save as Image\" [xAxis] type = \"category\" boundaryGap = false data = [ \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\" ] [yAxis] type = \"value\" [[series]] name = \"Email Marketing\" type = \"line\" stack = \"Total\" data = [ 120.0, 132.0, 101.0, 134.0, 90.0, 230.0, 210.0 ] [[series]] name = \"Affiliate Advertising\" type = \"line\" stack = \"Total\" data = [ 220.0, 182.0, 191.0, 234.0, 290.0, 330.0, 310.0 ] [[series]] name = \"Video Advertising\" type = \"line\" stack = \"Total\" data = [ 150.0, 232.0, 201.0, 154.0, 190.0, 330.0, 410.0 ] [[series]] name = \"Direct View\" type = \"line\" stack = \"Total\" data = [ 320.0, 332.0, 301.0, 334.0, 390.0, 330.0, 320.0 ] [[series]] name = \"Search Engine\" type = \"line\" stack = \"Total\" data = [ 820.0, 932.0,","date":"97-916-16006","objectID":"/tutorial/:47:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#echarts"},{"categories":["Markdown"],"content":" 48 mapbox Mapbox GL JS is a JavaScript library that uses WebGL to render interactive maps from vector tiles and Mapbox styles. The mapbox shortcode has the following named parameters to use Mapbox GL JS: lng [required] (first positional parameter) Longitude of the initial centerpoint of the map, measured in degrees. lat [required] (second positional parameter) Latitude of the initial centerpoint of the map, measured in degrees. zoom [optional] (third positional parameter) The initial zoom level of the map, the default value is 10. marked [optional] (fourth positional parameter) Whether to add a marker at the initial centerpoint of the map, the default value is true. light-style [optional] (fifth positional parameter) Style for the light theme, default value is the value set in the front matter or the site configuration. dark-style [optional] (sixth positional parameter) Style for the dark theme, default value is the value set in the front matter or the site configuration. navigation [optional] Whether to add NavigationControl, default value is the value set in the front matter or the site configuration. geolocate [optional] Whether to add GeolocateControl, default value is the value set in the front matter or the site configuration. scale [optional] Whether to add ScaleControl, default value is the value set in the front matter or the site configuration. fullscreen [optional] Whether to add FullscreenControl, default value is the value set in the front matter or the site configuration. width [optional] Width of the map, the default value is 100%. height [optional] Height of the map, the default value is 20rem. Example simple mapbox input: {{\u003c mapbox 121.485 31.233 12 \u003e}} Or {{\u003c mapbox lng=121.485 lat=31.233 zoom=12 \u003e}} The rendered output looks like this: Example mapbox input with the custom style: {{\u003c mapbox -122.252 37.453 10 false \"mapbox://styles/mapbox/navigation-preview-day-v4\" \"mapbox://styles/mapbox/navigation-preview-night-v4\" \u003e}} Or {{\u003c mapbox lng=-122.252 lat=37.453 zoom=10 marked=false light-style=\"mapbox://styles/mapbox/navigation-preview-day-v4\" dark-style=\"mapbox://styles/mapbox/navigation-preview-night-v4\" \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:48:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#mapbox"},{"categories":["Markdown"],"content":" 49 musicThe music shortcode embeds a responsive music player based on APlayer and MetingJS. There are three ways to use the music shortcode. ","date":"97-916-16006","objectID":"/tutorial/:49:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#music-1"},{"categories":["Markdown"],"content":" 49.1 Custom Music URL The complete usage of local resource references is supported. The music shortcode has the following named parameters by custom music URL: server [required] URL of the custom music. name [optional] Name of the custom music. artist [optional] Artist of the custom music. cover [required] URL of the custom music cover. Example music input by custom music URL: {{\u003c music url=\"/music/Wavelength.mp3\" name=Wavelength artist=oldmanyoung cover=\"/images/Wavelength.webp\" \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:49:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#custom-music-url"},{"categories":["Markdown"],"content":" 49.2 Music Platform URL Automatic IdentificationThe music shortcode has one named parameter by music platform URL automatic identification: auto [required] (first positional parameter) URL of the music platform URL for automatic identification, which supports netease, tencent and xiami music platforms. Example music input by music platform URL automatic identification: {{\u003c music auto=\"https://music.163.com/#/playlist?id=60198\" \u003e}} Or {{\u003c music \"https://music.163.com/#/playlist?id=60198\" \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:49:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#automatic-identification"},{"categories":["Markdown"],"content":" 49.3 Custom Server, Type and IDThe music shortcode has the following named parameters by custom music platform: server [required] (first positional parameter) [netease, tencent, kugou, xiami, baidu] Music platform. type [required] (second positional parameter) [song, playlist, album, search, artist] Type of the music. id [required] (third positional parameter) Song ID, or playlist ID, or album ID, or search keyword, or artist ID. Example music input by custom music platform: {{\u003c music server=\"netease\" type=\"song\" id=\"1868553\" \u003e}} Or {{\u003c music netease song 1868553 \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:49:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#custom-server"},{"categories":["Markdown"],"content":" 49.4 Other ParametersThe music shortcode has other named parameters applying to the above three ways: theme [optional] the Main colour of the music player, the default value is #448aff. fixed [optional] Whether to enable fixed mode, the default value is false. mini [optional] Whether to enable mini mode, the default value is false. autoplay [optional] Whether to autoplay music, the default value is false. volume [optional] Default volume when the player is first opened, which will be remembered in the browser, the default value is 0.7. mutex [optional] Whether to pause other players when this player starts playing, the default value is true. The music shortcode has the following named parameters only applying to the type of music list: loop [optional] [all, one, none] Loop mode of the music list, the default value is none. order [optional] [list, random] Play order of the music list, the default value is list. list-folded [optional] Whether the music list should be folded at first, the default value is false. list-max-height [optional] Max height of the music list, the default value is 340px. ","date":"97-916-16006","objectID":"/tutorial/:49:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#other-parameters"},{"categories":["Markdown"],"content":" 50 aplayer and audio If you need more advanced controls (custom playlist, mini mode, custom audio type…) over the music player, you can use the aplayer shortcode along with the audio shortcode to reach full power of APlayer.js. The aplayer shortcode is used to create an APlayer instance, and the audio shortcode is used to store data about each music file. Please refer to APlayer.js documentation for all options. Example aplayer and audio input: {{\u003c aplayer fixed=false mini=false autoplay=false theme=\"#b7daff\" loop=\"all\" order=\"list\" preload=\"auto\" volume=0.7 mutex=true lrcType=1 listFolded=false listMaxHeight=\"\" storageName=\"aplayer-setting\" \u003e}} {{\u003c audio name=\"Wavelength\" artist=\"oldmanyoung\" url=\"/music/Wavelength.mp3\" cover=\"/images/Wavelength.webp\" /\u003e}} {{\u003c audio name=\"Wavelength\" artist=\"oldmanyoung\" url=\"/music/Wavelength.mp3\" cover=\"/images/Wavelength.webp\" \u003e}} [00:00.00]APlayer audio1 [00:04.01]is [00:08.02]amazing {{\u003c /audio \u003e}} {{\u003c /aplayer \u003e}} Example aplayer and audio output: Note that these shortcodes cannot be used separately and only named parameters are supported. If you place the LRC inside the audio shortcode, it is passed to the APlayer as a JS string, so the lrcType needs to be set to 1. If you set the link to the LRC file through the lrc parameter, it will be passed as an LRC file, so the lrcType needs to be set to 3. ","date":"97-916-16006","objectID":"/tutorial/:50:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#aplayer-and-audio"},{"categories":["Markdown"],"content":" 51 bilibili The bilibili shortcode embeds a responsive video player for bilibili videos. When the video only has one part, only the BV id of the video is required, e.g.: https://www.bilibili.com/video/BV1Sx411T7QQ Example bilibili input: {{\u003c bilibili BV1Sx411T7QQ \u003e}} Or {{\u003c bilibili id=BV1Sx411T7QQ \u003e}} The rendered output looks like this: When the video has multiple parts, in addition to the BV id of the video, p is also required, whose default value is 1, e.g.: https://www.bilibili.com/video/BV1TJ411C7An?p=3 Example bilibili input with p: {{\u003c bilibili BV1TJ411C7An 3 \u003e}} Or {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:51:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#bilibili"},{"categories":["Markdown"],"content":" 52 typeitThe typeit shortcode provides typing animation based on TypeIt. Just insert your content in the typeit shortcode and that’s it. ","date":"97-916-16006","objectID":"/tutorial/:52:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#typeit"},{"categories":["Markdown"],"content":" 52.1 Simple ContentSimple content is allowed in Markdown format and without rich block content such as images and more… Example typeit input: {{\u003c typeit \u003e}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u003c /typeit \u003e}} The rendered output looks like this: Alternatively, you can use custom HTML tags. Example typeit input with h4 tag: {{\u003c typeit tag=h4 \u003e}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u003c /typeit \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:52:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#simple-content"},{"categories":["Markdown"],"content":" 52.1 Simple ContentSimple content is allowed in Markdown format and without rich block content such as images and more… Example typeit input: {{\u003c typeit \u003e}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u003c /typeit \u003e}} The rendered output looks like this: Alternatively, you can use custom HTML tags. Example typeit input with h4 tag: {{\u003c typeit tag=h4 \u003e}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u003c /typeit \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:52:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#id-7 class="},{"categories":["Markdown"],"content":" 52.2 Code ContentCode content is allowed and will be highlighted by the named parameter code for the type of code language. Example typeit input with code: {{\u003c typeit code=java \u003e}} public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } {{\u003c /typeit \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:52:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#code-content"},{"categories":["Markdown"],"content":" 52.3 Group ContentAll typing animations start at the same time by default. But sometimes you may want to start a set of typeit contents in order. A set of typeit contents with the same value of named parameter group will start typing animation in sequence. Example typeit input with group: {{\u003c typeit group=paragraph \u003e}} **First** this paragraph begins {{\u003c /typeit \u003e}} {{\u003c typeit group=paragraph \u003e}} **Then** this paragraph begins {{\u003c /typeit \u003e}} The rendered output looks like this: ","date":"97-916-16006","objectID":"/tutorial/:52:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#group-content"},{"categories":["Markdown"],"content":" 53 script script is a shortcode to insert custom  Javascript in your post. Note The script content can be guaranteed to be executed in order after all third-party libraries are loaded. So you are free to use third-party libraries. Example script input: {{\u003c script \u003e}} console.log('Just DoIt!'); {{\u003c /script \u003e}} You can see the output in the console of the developer tool. ","date":"97-916-16006","objectID":"/tutorial/:53:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#script"},{"categories":["Markdown"],"content":" 54 friend friend is a shortcode to insert a friend link to your friend’s site in your post. The friend shortcode has the following named parameters: name [required] (first positional parameter) Your friend site’s name. url [required] (second positional parameter) The link to your friend site. avatar [required] (third positional parameter) Your friend site’s avatar. bio [required] (fourth positional parameter) A short bio of your friend site. Example friend input: {{\u003c friend \"PCloud\" \"https://github.com/HEIGE-PCloud/\" \"https://avatars.githubusercontent.com/u/52968553?v=4\" \"This is PCloud~💤\" \u003e}} Or {{\u003c friend name=\"PCloud\" url=\"https://github.com/HEIGE-PCloud/\" avatar=\"https://avatars.githubusercontent.com/u/52968553?v=4\" bio=\"This is PCloud~💤\" \u003e}} The rendered output looks like this: PCloud This is PCloud~💤 ","date":"97-916-16006","objectID":"/tutorial/:54:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#friend"},{"categories":["Markdown"],"content":" 55 showcase showcase is a shortcode to insert a showcase of your project in the post. The showcase shortcode has the following named parameters: title [required] (first positional parameter) The title of your showcase. summary [required] (second positional parameter) A brief introduction to your project. image [required] (third positional parameter) The url to the preview image. link [required] (fourth positional parameter) The url to your project page. column [optional] (fifth positional parameter) This parameter defines how many showcases are in each row. The default value is 2, which means there will have two showcases in each row. You can change it to 1, 2 or 3. It’s important to note that when a user visits the website on a small screen, the number of the column may be auto-adjusted to provide the best experience. Example showcase input: {{\u003c showcase title=\"Theme Documentation - Basics\" summary=\"Discover what the Hugo - DoIt theme is all about and the core-concepts behind it.\" image=\"/theme-documentation-basics/featured-image.webp\" link=\"/theme-documentation-basics\" \u003e}} Or {{\u003c showcase \"Theme Documentation - Basics\" \"Discover what the Hugo - DoIt theme is all about and the core-concepts behind it.\" \"/theme-documentation-basics/featured-image.webp\" \"/theme-documentation-basics\" \u003e}} The rendered output looks like this: Theme Documentation - Basics Discover what the Hugo - DoIt theme is all about and the core-concepts behind it. Read more... ","date":"97-916-16006","objectID":"/tutorial/:55:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#showcase"},{"categories":["Markdown"],"content":" 56 math math is a shortcode to insert a math expression in your post. This can prevent Goldmark from parsing math expressions into HTML. You no longer need to escape special characters inside this shortcode. Example math input: {{\u003c math \u003e}}$\\|\\boldsymbol{x}\\|_{0}=\\sqrt[0]{\\sum_{i} x_{i}^{0}}${{\u003c /math \u003e}} Or {{\u003c math \u003e}} $$\\|\\boldsymbol{x}\\|_{0}=\\sqrt[0]{\\sum_{i} x_{i}^{0}}$$ {{\u003c /math \u003e}} The rendered output looks like this: $\\|\\boldsymbol{x}\\|_{0}=\\sqrt[0]{\\sum_{i} x_{i}^{0}}$ $$\\|\\boldsymbol{x}\\|_{0}=\\sqrt[0]{\\sum_{i} x_{i}^{0}}$$ Note Hugo v0.93.0 or later is required for drawing custom diagrams. ","date":"97-916-16006","objectID":"/tutorial/:56:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#math-1"},{"categories":["Markdown"],"content":" 57 GoATGoATGo ASCII Tool is a Go implementation of markdeep.mini.js’s ASCII diagram generator. To use GoAT, simply place the ASCII input inside a code block with the language set to goat. ```goat // ASCII input here ``` Here are some examples of generated SVGs using GoAT. More examples are available. ","date":"97-916-16006","objectID":"/tutorial/:57:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#goat"},{"categories":["Markdown"],"content":" 57.1 Trees ```goat . . . .--- 1 .-- 1 / 1 / \\ | | .---+ .-+ + / \\ .---+---. .--+--. | '--- 2 | '-- 2 / \\ 2 + + | | | | ---+ ---+ + / \\ / \\ .-+-. .-+-. .+. .+. | .--- 3 | .-- 3 \\ / 3 / \\ / \\ | | | | | | | | '---+ '-+ + 1 2 3 4 1 2 3 4 1 2 3 4 '--- 4 '-- 4 \\ 4 ``` 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 ","date":"97-916-16006","objectID":"/tutorial/:57:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#trees"},{"categories":["Markdown"],"content":" 57.2 Overlaps ```goat .-. .-. .-. .-. .-. .-. | | | | | | | | | | | | .---------. .--+---+--. .--+---+--. .--| |--. .--+ +--. .------|--. | | | | | | | | | | | | | | | | | | '---------' '--+---+--' '--+---+--' '--| |--' '--+ +--' '--|------' | | | | | | | | | | | | '-' '-' '-' '-' '-' '-' ``` ","date":"97-916-16006","objectID":"/tutorial/:57:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#overlaps"},{"categories":["Markdown"],"content":" 57.3 Line Decorations ```goat ________ o * * .--------------. *---+--. | | o o | ^ \\ / | .----------. | | | '--* -+- | | v / \\ / | | \u003c------. | | | '-----\u003e .---(---' ---\u003e*\u003c--- / .+-\u003e*\u003c--o----' | | | | | \u003c--' ^ ^ | | | | | ^ \\ | '--------' | | \\/ *-----' o |\u003c-----\u003e| '-----' |__| v '------------' | /\\ *---------------' ``` ","date":"97-916-16006","objectID":"/tutorial/:57:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#line-decorations"},{"categories":["Markdown"],"content":" 57.4 Line Ends ```goat o--o *--o / / * o o o o o * * * * o o o o * * * * o o o o * * * * o--* *--* v v ^ ^ | | | | | | | | \\ \\ \\ \\ \\ \\ \\ \\ / / / / / / / / o--\u003e *--\u003e * o / / o * v ' o * v ' o * v \\ o * v \\ o * v / o * v / o--- *--- ^ ^ ^ ^ . . . . ^ ^ ^ ^ \\ \\ \\ \\ ^ ^ ^ ^ / / / / | | * o \\ \\ * o | | | | | | | | \\ \\ \\ \\ \\ \\ \\ \\ / / / / / / / / v v ^ ^ v v ^ ^ o * v ' o * v ' o * v \\ o * v \\ o * v / o * v / * o | | * o \\ \\ \u003c--o \u003c--* \u003c--\u003e \u003c--- ---o ---* ---\u003e ---- *\u003c-- o\u003c-- --\u003eo --\u003e* ``` ","date":"97-916-16006","objectID":"/tutorial/:57:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#line-ends"},{"categories":["Markdown"],"content":" 57.5 Dot Grids ```goat o o o o o * * * * * * * o o * o o o * * * o o o · * · · · · · · o o o o o * * * * * o o o o * o o o o * * * * * o * * · * * · · · · · · o o o o o * * * * * o * o o o o o o o o * * * * * o o o o o · o · · o · · * * · o o o o o * * * * * o * o o o o o o o * * * * o * o o · · · · o · · * · o o o o o * * * * * * * * * o o o o * * * o * o · · · · · · · * ``` · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · ","date":"97-916-16006","objectID":"/tutorial/:57:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#dot-grids"},{"categories":["Markdown"],"content":" 57.6 Large Nodes ```goat .---. .-. .-. .-. .-. | A +-----\u003e| 1 +\u003c----\u003e| 2 |\u003c----+ 4 +------------------. | 8 | '---' '-' '+' '-' | '-' | ^ | ^ v | v | .-. .-+-. .-. .-+-. .-. .+. .---. | 3 +----\u003e| B |\u003c-----\u003e| 5 +----\u003e| C +----\u003e| 6 +----\u003e| 7 |\u003c----\u003e| D | '-' '---' '-' '---' '-' '-' '---' ``` A 1 2 3 4 B 5 C 6 8 7 D ","date":"97-916-16006","objectID":"/tutorial/:57:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#large-nodes"},{"categories":["Markdown"],"content":" 57.7 Small Grids ```goat ___ ___ .---+---+---+---+---. .---+---+---+---. .---. .---. ___/ \\___/ \\ | | | | | | / \\ / \\ / \\ / \\ / | +---+ | / \\___/ \\___/ +---+---+---+---+---+ +---+---+---+---+ +---+ +---+ \\___/ b \\___/ \\ | | | b | | | \\ / \\a/ \\b/ \\ / \\ | +---+ | / a \\___/ \\___/ +---+---+---+---+---+ +---+---+---+---+ +---+ b +---+ \\___/ \\___/ \\ | | a | | | | / \\ / \\ / \\ / \\ / | a +---+ | \\___/ \\___/ '---+---+---+---+---' '---+---+---+---' '---' '---' ``` a b a b a b a b ","date":"97-916-16006","objectID":"/tutorial/:57:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#small-grids"},{"categories":["Markdown"],"content":" 57.8 Big Grids ```goat .----. .----. / \\ / \\ .-----+-----+-----. + +----+ +----. | | | | .-----+-----+-----+-----+ \\ / \\ / \\ | | | | / / / / / +----+ B +----+ + +-----+-----+-----+ +-----+-----+-----+-----+ / \\ / \\ / | | | | / / / / / + A +----+ +----+ | | B | | +-----+-----+-----+-----+ \\ / \\ / \\ +-----+-----+-----+ / / A / B / / '----+ +----+ + | | | | +-----+-----+-----+-----+ \\ / \\ / | A | | | / / / / / '----' '----' '-----+-----+-----' '-----+-----+-----+-----+ ``` A B A B A B ","date":"97-916-16006","objectID":"/tutorial/:57:8","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#big-grids"},{"categories":["Markdown"],"content":" 57.9 Complicated ```goat +-------------------+ ^ .---. | A Box |__.--.__ __.--\u003e | .-. | | | | '--' v | * |\u003c--- | | +-------------------+ '-' | | Round *---(-. | .-----------------. .-------. .----------. .-------. | | | | Mixed Rounded | | | / Diagonals \\ | | | | | | | \u0026 Square Corners | '--. .--' / \\ |---+---| '-)-' .--------. '--+------------+-' .--. | '-------+--------' | | | | / Search / | | | | '---. | '-------' | '-+------' |\u003c----------\u003e| | | | v Interior | ^ ' \u003c---' '----' .-----------. ---. .--- v | .------------------. Diag line | .-------. +---. \\ / . | | if (a \u003e b) +---. .---\u003e| | | | | Curved line \\ / / \\ | | obj-\u003efcn() | \\ / | '-------' |\u003c--' + / \\ | '------------------' '--' '--+--------' .--. .--. | .-. +Done?+-' .---+-----. | ^ |\\ | | /| .--+ | | \\ / | | | Join \\|/ | | Curved | \\| |/ | | \\ | \\ / | | +----\u003e o --o-- '-' Vertical '--' '--' '-- '--' + .---. \u003c--+---+-----' | /|\\ | | 3 | v not:line 'quotes' .-' '---' .-. .---+--------. / A || B *bold* | ^ | | | Not a dot | \u003c---+---\u003c-- A dash--is not a line v | '-' '---------+--' / Nor/is this. --- ``` \u0026 A M S i o i q f b B x u j o e a ( - x d r a \u003e e f R \u003e c o C n u o b ( n r ) ) d n e e J d r o s i n N o R D t o i u a a n g d d l o i t n e D i a g o n a l s C V u e r r v t e i d c a l n o t A N C : o u l d r r i A a / I v n s i n e e h s t d - e - t r l B i h i i s i o n ' s r e q n . u * o o b t t o e l a s d ' * l i n e D o n S e e ? a r c 3 h ","date":"97-916-16006","objectID":"/tutorial/:57:9","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#complicated"},{"categories":["Markdown"],"content":" 58 MermaidMermaid is a JavaScript-based diagramming and charting tool that renders Markdown-inspired text definitions to create and modify diagrams dynamically. It lets you create diagrams and visualizations using text and code. To use Mermaid, simply place the mermaid code inside a code block with the language set to mermaid. ```mermaid // mermaid diagram code here ``` Here are some examples of generated SVGs using Mermaid. ","date":"97-916-16006","objectID":"/tutorial/:58:0","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#mermaid-1"},{"categories":["Markdown"],"content":" 58.1 FlowchartAll Flowcharts are composed of nodes, geometric shapes and edges, the arrows or lines. The mermaid code defines the way that these nodes and edges are made and interact. ```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ``` graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ","date":"97-916-16006","objectID":"/tutorial/:58:1","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#flowchart-1"},{"categories":["Markdown"],"content":" 58.2 Sequence diagramA Sequence diagram is an interaction diagram that shows how processes operate with one another and in what order. ```mermaid sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! ``` sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! ","date":"97-916-16006","objectID":"/tutorial/:58:2","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#sequence-diagram-1"},{"categories":["Markdown"],"content":" 58.3 Gantt diagramA Gantt chart is a type of bar chart, first developed by Karol Adamiecki in 1896, and independently by Henry Gantt in the 1910s, that illustrates a project schedule and the amount of time it would take for any one project to finish. Gantt charts illustrate numbers of days between the start and finish dates of the terminal elements and summary elements of a project. ```mermaid gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d ``` gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d ","date":"97-916-16006","objectID":"/tutorial/:58:3","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#gantt-diagram"},{"categories":["Markdown"],"content":" 58.4 Class diagramThe class diagram is the main building block of object-oriented modelling. It is used for general conceptual modelling of the structure of the application, and detailed modelling translating the models into programming code. Class diagrams can also be used for data modelling. The classes in a class diagram represent both the main elements, interactions in the application, and the classes to be programmed. ```mermaid classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label ``` classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label ","date":"97-916-16006","objectID":"/tutorial/:58:4","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#class-diagram-1"},{"categories":["Markdown"],"content":" 58.5 Git graph ```mermaid gitGraph commit branch hotfix checkout hotfix commit branch develop checkout develop commit id:\"ash\" tag:\"abc\" branch featureB checkout featureB commit type:HIGHLIGHT checkout main checkout hotfix commit type:NORMAL checkout develop commit type:REVERSE checkout featureB commit checkout main merge hotfix checkout featureB commit checkout develop branch featureA commit checkout develop merge hotfix checkout featureA commit checkout featureB commit checkout develop merge featureA branch release checkout release commit checkout main commit checkout release merge main checkout develop merge release ``` gitGraph commit branch hotfix checkout hotfix commit branch develop checkout develop commit id:\"ash\" tag:\"abc\" branch featureB checkout featureB commit type:HIGHLIGHT checkout main checkout hotfix commit type:NORMAL checkout develop commit type:REVERSE checkout featureB commit checkout main merge hotfix checkout featureB commit checkout develop branch featureA commit checkout develop merge hotfix checkout featureA commit checkout featureB commit checkout develop merge featureA branch release checkout release commit checkout main commit checkout release merge main checkout develop merge release ","date":"97-916-16006","objectID":"/tutorial/:58:5","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#git-graph-1"},{"categories":["Markdown"],"content":" 58.6 Entity Relationship Diagram - experimentalAn entity–relationship diagram (or ER diagram) describes interrelated things of interest in a specific domain of knowledge. A basic ER diagram is composed of entity types (which classify the things of interest) and specifies relationships that can exist between entities (instances of those entity types). ```mermaid erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ``` erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ","date":"97-916-16006","objectID":"/tutorial/:58:6","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#entity-relationship-diagram---experimental"},{"categories":["Markdown"],"content":" 58.7 User Journey DiagramUser journey diagrams describe at a high level of detail exactly what steps different users take to complete a specific task within a system, application or website. This technique shows the current (as-is) user workflow, and reveals areas of improvement for the to-be workflow. ```mermaid journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me ``` journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me This is a digital footnote ↩︎ This is a footnote with “label” ↩︎ ","date":"97-916-16006","objectID":"/tutorial/:58:7","series":null,"tags":["Markdown","HTML"],"title":"Tutorial","uri":"/tutorial/#user-journey-diagram"},{"categories":null,"content":"  DoIt is a clean, elegant but advanced blog theme for Hugo developed by HEIGE-PCloud. It is based on the LoveIt Theme, LeaveIt Theme and KeepIt Theme. ","date":"811-82-2004","objectID":"/about/:0:0","series":null,"tags":null,"title":"About DoIt","uri":"/about/#"},{"categories":null,"content":" 1 Features","date":"811-82-2004","objectID":"/about/:1:0","series":null,"tags":null,"title":"About DoIt","uri":"/about/#features"},{"categories":null,"content":" 1.1 Performance and SEO  Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed Insights  Optimized SEO performance with a correct SEO SCHEMA based on JSON-LD  Google Analytics supported  Fathom Analytics supported  Baidu Analytics supported  Umami Analytics supported  Plausible Analytics supported  Search engine verification supported (Google, Bind, Yandex and Baidu)  CDN for third-party libraries supported ","date":"811-82-2004","objectID":"/about/:1:1","series":null,"tags":null,"title":"About DoIt","uri":"/about/#performance-and-seo"},{"categories":null,"content":" 1.2 Appearance and Layout / Responsive layout / Light/Dark mode  Globally consistent design language  Pagination supported  Easy-to-use and self-expanding table of contents  Multilanguage supported and i18n ready  Beautiful CSS animation ","date":"811-82-2004","objectID":"/about/:1:2","series":null,"tags":null,"title":"About DoIt","uri":"/about/#appearance-and-layout"},{"categories":null,"content":" 1.3 Social and Comment Systems  Gravatar supported by Gravatar  Local Avatar supported  Up to 64 social links supported  Up to 28 share sites supported  Disqus comment system supported by Disqus  Gitalk comment system supported by Gitalk  Valine comment system supported by Valine  Waline comment system supported by Waline  Facebook comments system supported by Facebook  Telegram comments system supported by Comments  Commento comment system supported by Commento  Utterances comment system supported by Utterances  Twikoo comment system supported by Twikoo  Vssue comment system supported by Vssue  Remark42 comment system supported by Remark42  giscus comment system supported by giscus  Artalk comment system supported by Artalk ","date":"811-82-2004","objectID":"/about/:1:3","series":null,"tags":null,"title":"About DoIt","uri":"/about/#social-and-comment-systems"},{"categories":null,"content":" 1.4 Extended Features  Search supported by algolia or Fuse.js  Twemoji supported  Automatically highlighting code  Copy code to clipboard with one click  Images gallery supported by lightgallery.js  Extended Markdown syntax for Font Awesome icons  Extended Markdown syntax for ruby annotation  Extended Markdown syntax for fraction  Mathematical formula supported by $ \\KaTeX $  Diagrams shortcode supported by mermaid  Interactive data visualization shortcode supported by ECharts  Mapbox shortcode supported by Mapbox GL JS  Music player shortcode supported by APlayer and MetingJS  Bilibili player shortcode  Kinds of admonitions shortcode  Custom style shortcode  Custom script shortcode  Animated typing supported by TypeIt  Cookie consent banner supported by cookieconsent … ","date":"811-82-2004","objectID":"/about/:1:4","series":null,"tags":null,"title":"About DoIt","uri":"/about/#extended-features"},{"categories":null,"content":" 2 LicenseDoIt is licensed under the MIT license. Check the LICENSE file for details. Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css autocomplete.js algoliasearch Fuse.js object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt $ \\KaTeX $ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine Waline Twikoo Vssue cookieconsent Remark42 ","date":"811-82-2004","objectID":"/about/:2:0","series":null,"tags":null,"title":"About DoIt","uri":"/about/#license"}]